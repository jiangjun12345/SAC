2018-04-24 13:13:01,841 INFO [org.springframework.web.servlet.DispatcherServlet]initServletBean(line:454)[localhost-startStop-1]FrameworkServlet 'spring': initialization started
2018-04-24 13:13:01,862 INFO [org.springframework.web.context.support.XmlWebApplicationContext]prepareRefresh(line:510)[localhost-startStop-1]Refreshing WebApplicationContext for namespace 'spring-servlet': startup date [Tue Apr 24 13:13:01 CST 2018]; root of context hierarchy
2018-04-24 13:13:01,893 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader]loadBeanDefinitions(line:315)[localhost-startStop-1]Loading XML bean definitions from class path resource [applicationContext.xml]
2018-04-24 13:13:02,038 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader]loadBeanDefinitions(line:315)[localhost-startStop-1]Loading XML bean definitions from class path resource [applicationContext-resource.xml]
2018-04-24 13:13:02,109 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader]loadBeanDefinitions(line:315)[localhost-startStop-1]Loading XML bean definitions from class path resource [applicationContext-persist.xml]
2018-04-24 13:13:02,288 INFO [org.springframework.beans.factory.xml.XmlBeanDefinitionReader]loadBeanDefinitions(line:315)[localhost-startStop-1]Loading XML bean definitions from class path resource [applicationContext-quartz.xml]
2018-04-24 13:13:02,573 INFO [org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor]<init>(line:141)[localhost-startStop-1]JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-24 13:13:02,828 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:57)[localhost-startStop-1]Using store MEMORY
2018-04-24 13:13:02,828 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:58)[localhost-startStop-1]Using store tablePrefix glass_
2018-04-24 13:13:02,829 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:59)[localhost-startStop-1]Using job basePackage org.n3r.quartz.glass.job
2018-04-24 13:13:02,829 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:60)[localhost-startStop-1]Using job dateFormat yyyy-MM-dd HH:mm:ss
2018-04-24 13:13:02,829 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:61)[localhost-startStop-1]Using job injectionType FIELD
2018-04-24 13:13:02,829 INFO [org.n3r.quartz.glass.configuration.Configuration]init(line:62)[localhost-startStop-1]Using log store MEMORY
2018-04-24 13:13:02,907 INFO [org.springframework.beans.factory.support.DefaultListableBeanFactory]preInstantiateSingletons(line:598)[localhost-startStop-1]Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5aebc9a2: defining beans [org.springframework.aop.config.internalAutoProxyCreator,pointcut,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,txAdvice,sqlMapClient,transactionManager,dataSource,net.easipay.cbp.util.SpringServiceFactory#0,net.easipay.dsfc.ws.WsApplicationContextInitializer#0,sqlMapClientTemplate,sacCusSettlementServiceImpl,sacDepositDetailCmdServiceImpl,sacExceptMonitorServiceImpl,sacFundTransferCmdServiceImpl,sacOflCommandServiceImpl,sacOnlCommandServiceImpl,sacRefundCmdServiceImpl,sacTransferCmdServiceImpl,sequenceCreatorServiceImpl,exceptMonitorDaoImpl,sacB2BCommandDaoImpl,sacB2CExRefundApplyDaoImpl,sacCusParameter,sacCusSettlementDaoImpl,sacDepositDetailDaoImpl,sacFundTransferCmdDaoImpl,sacOflCommandDaoImpl,sacOnlCmdBatchDaoImpl,sacOnlCommandDaoImpl,sacOtrxInfoDaoImpl,sacRefundCommandDaoImpl,sequenceCreatorDaoImpl,configuration,version,glassJobFactory,glassJobListener,glassSchedulerListener,springConfig,configurationController,filesController,indexController,jobsController,jsServiceController,logsController,triggersController,jobAdder,jobPathScanner,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,B2B线上出款指令批次生成 - 每天早上8点跑,资金调拨状态更新任务 - 每3分钟,B2B退款指令任务 - 每10分钟,B2C退款指令任务 - 每10分钟,B2B划款指令更新任务 - 每10分钟,线下预存指令更新任务 - 每10分钟,B2B线下出款指令更新任务 - 每10分钟,汇总清算出款交易任务 - 每天早上一点跑,异常监控定时录入任务 - 每1分钟,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration,handlerExceptionResolver,requestMappingHandlerMapping,mvcContentNegotiationManager,viewControllerHandlerMapping,beanNameHandlerMapping,resourceHandlerMapping,defaultServletHandlerMapping,requestMappingHandlerAdapter,mvcConversionService,mvcValidator,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,quartzScheduler,executions,fixedLocaleResolver,viewResolver,velocityConfig,messageSource,addToModelInterceptor]; root of factory hierarchy
2018-04-24 13:13:03,539 INFO [net.easipay.dsfc.ApplicationContextLogger]info(line:14)[localhost-startStop-1]Start to setWsServiceConfigs...
2018-04-24 13:13:03,563 DEBUG [org.apache.commons.beanutils.BeanUtils]copyProperties(line:224)[localhost-startStop-1]BeanUtils.copyProperties(net.easipay.dsfc.Service@8e6b6f8e, net.easipay.dsfc.Service@3525231f)
2018-04-24 13:13:03,572 INFO [net.easipay.dsfc.ApplicationContextLogger]info(line:14)[localhost-startStop-1]Success to init service[serviceUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo]....
2018-04-24 13:13:03,577 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[localhost-startStop-1]Start to register cache service. type - net.easipay.dsfc.Service , timeInterval - 180000
2018-04-24 13:13:03,579 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[localhost-startStop-1]Start to register cache service. type - net.easipay.dsfc.UnifiedConfig , timeInterval - 180000
2018-04-24 13:13:03,580 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[localhost-startStop-1]Start to register cache service. type - net.easipay.dsfc.local.service , timeInterval - 180000
2018-04-24 13:13:03,648 INFO [org.quartz.impl.StdSchedulerFactory]instantiate(line:1184)[localhost-startStop-1]Using default implementation for ThreadExecutor
2018-04-24 13:13:03,664 INFO [org.quartz.core.SchedulerSignalerImpl]<init>(line:61)[localhost-startStop-1]Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2018-04-24 13:13:03,664 INFO [org.quartz.core.QuartzScheduler]<init>(line:240)[localhost-startStop-1]Quartz Scheduler v.2.2.1 created.
2018-04-24 13:13:03,665 INFO [org.quartz.simpl.RAMJobStore]initialize(line:155)[localhost-startStop-1]RAMJobStore initialized.
2018-04-24 13:13:03,666 INFO [org.quartz.core.QuartzScheduler]initialize(line:305)[localhost-startStop-1]Scheduler meta-data: Quartz Scheduler (v2.2.1) 'QuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 15 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2018-04-24 13:13:03,669 INFO [org.quartz.impl.StdSchedulerFactory]instantiate(line:1339)[localhost-startStop-1]Quartz scheduler 'QuartzScheduler' initialized from an externally provided properties instance.
2018-04-24 13:13:03,669 INFO [org.quartz.impl.StdSchedulerFactory]instantiate(line:1343)[localhost-startStop-1]Quartz scheduler version: 2.2.1
2018-04-24 13:13:03,670 INFO [org.quartz.core.QuartzScheduler]setJobFactory(line:2311)[localhost-startStop-1]JobFactory set to: org.n3r.quartz.glass.job.GlassJobFactory@4704532e
2018-04-24 13:13:03,671 INFO [org.quartz.core.QuartzScheduler]start(line:575)[localhost-startStop-1]Scheduler QuartzScheduler_$_NON_CLUSTERED started.
2018-04-24 13:13:03,672 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,727 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,732 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,736 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,736 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,738 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,739 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,740 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,741 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,742 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,742 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,743 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,744 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,745 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,745 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,747 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,747 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,748 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:03,749 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:04,096 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/configuration],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.ConfigurationController.configuration(org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,097 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/image/{name}.png],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void org.n3r.quartz.glass.web.controller.FilesController.image(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-24 13:13:04,097 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/css/style.css],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void org.n3r.quartz.glass.web.controller.FilesController.ccs(javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-24 13:13:04,102 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/js/{name}.js],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public void org.n3r.quartz.glass.web.controller.FilesController.javascript(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2018-04-24 13:13:04,103 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/start],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.IndexController.start() throws org.quartz.SchedulerException
2018-04-24 13:13:04,103 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/interrupt],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.IndexController.interrupt(java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,104 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/ || /index],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.IndexController.dashboard(org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,104 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/standby],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.IndexController.standby() throws org.quartz.SchedulerException
2018-04-24 13:13:04,104 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/restartTrigger],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.IndexController.restartTrigger(java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,107 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/delete],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.delete(java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,107 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/fire],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.fire(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,108 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.job(java.lang.String,java.lang.String,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,108 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/new],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.createJob(org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,109 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.jobs(org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,109 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/new],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.postCreateJob(org.n3r.quartz.glass.web.form.NewJobForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,109 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/edit],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.updateJob(java.lang.String,java.lang.String,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,109 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/edit],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.JobsController.postUpdateJob(java.lang.String,java.lang.String,org.n3r.quartz.glass.web.form.JobForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,111 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jsapi/jobs/description],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.n3r.quartz.glass.job.annotation.JobBean org.n3r.quartz.glass.web.controller.JsServiceController.description(java.lang.String)
2018-04-24 13:13:04,112 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jsapi/logs],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public org.n3r.quartz.glass.util.Page<org.n3r.quartz.glass.log.joblog.JobLog> org.n3r.quartz.glass.web.controller.JsServiceController.logs(java.lang.Long,java.lang.Integer)
2018-04-24 13:13:04,113 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/logs/clear],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.LogsController.clear(int,org.springframework.ui.Model)
2018-04-24 13:13:04,113 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/logs],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.LogsController.logs(int,org.springframework.ui.Model)
2018-04-24 13:13:04,113 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/logs/{result}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.LogsController.logs(java.lang.String,int,org.springframework.ui.Model)
2018-04-24 13:13:04,114 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/logs/{jobGroup}/{jobName}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.LogsController.logs(java.lang.String,java.lang.String,int,org.springframework.ui.Model)
2018-04-24 13:13:04,114 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/traces/{executionId}],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.LogsController.traces(java.lang.Long,java.lang.Integer,org.springframework.ui.Model)
2018-04-24 13:13:04,117 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/resume],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.resume(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,118 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/delete],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.delete(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,118 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/triggers],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.all(org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,118 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/pause],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.pause(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws org.quartz.SchedulerException
2018-04-24 13:13:04,118 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/new-cron],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.createCronTrigger(java.lang.String,java.lang.String,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,119 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/new-cron],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.postCreateCronTrigger(java.lang.String,java.lang.String,org.n3r.quartz.glass.web.form.NewCronTriggerForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException,java.text.ParseException
2018-04-24 13:13:04,119 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/new-simple],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.createSimpleTrigger(java.lang.String,java.lang.String,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,119 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/new-simple],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.postCreateSimpleTrigger(java.lang.String,java.lang.String,org.n3r.quartz.glass.web.form.NewSimpleTriggerForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException,java.text.ParseException
2018-04-24 13:13:04,119 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/edit],methods=[],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.edit(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.ui.Model) throws org.quartz.SchedulerException
2018-04-24 13:13:04,120 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/edit-cron],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.postEditCronTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.n3r.quartz.glass.web.form.CronTriggerForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException,java.text.ParseException
2018-04-24 13:13:04,120 INFO [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping]registerHandlerMethod(line:179)[localhost-startStop-1]Mapped "{[/jobs/{group}/{name}/triggers/{triggerGroup}/{triggerName}/edit-simple],methods=[POST],params=[],headers=[],consumes=[],produces=[],custom=[]}" onto public java.lang.String org.n3r.quartz.glass.web.controller.TriggersController.postEditSimpleTrigger(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.n3r.quartz.glass.web.form.SimpleTriggerForm,org.springframework.validation.BindingResult,org.springframework.ui.Model) throws org.quartz.SchedulerException,java.text.ParseException
2018-04-24 13:13:04,165 INFO [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping]registerHandler(line:315)[localhost-startStop-1]Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler]
2018-04-24 13:13:04,208 INFO [org.hibernate.validator.util.Version]<clinit>(line:24)[localhost-startStop-1]Hibernate Validator 4.2.0.Final
2018-04-24 13:13:04,216 DEBUG [org.hibernate.validator.engine.resolver.DefaultTraversableResolver]detectJPA(line:107)[localhost-startStop-1]Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2018-04-24 13:13:04,217 DEBUG [org.hibernate.validator.engine.resolver.DefaultTraversableResolver]detectJPA(line:118)[localhost-startStop-1]Instantiated JPA aware TraversableResolver of type org.hibernate.validator.engine.resolver.JPATraversableResolver.
2018-04-24 13:13:04,220 DEBUG [org.hibernate.validator.xml.ValidationXmlParser]getValidationConfig(line:203)[localhost-startStop-1]Trying to load META-INF/validation.xml for XML based Validator configuration.
2018-04-24 13:13:04,221 DEBUG [org.hibernate.validator.xml.ValidationXmlParser]getValidationConfig(line:206)[localhost-startStop-1]No META-INF/validation.xml found. Using annotation based configuration only
2018-04-24 13:13:04,354 INFO [org.springframework.web.servlet.view.velocity.VelocityConfigurer]postProcessVelocityEngine(line:139)[localhost-startStop-1]ClasspathResourceLoader with name 'springMacro' added to configured VelocityEngine
2018-04-24 13:13:04,360 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Initializing Velocity, Calling init()...
2018-04-24 13:13:04,360 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Starting Apache Velocity v1.7 (compiled: 2010-11-19 12:14:37)
2018-04-24 13:13:04,360 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Default Properties File: org\apache\velocity\runtime\defaults\velocity.properties
2018-04-24 13:13:04,360 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]LogSystem has been deprecated. Please use a LogChute implementation.
2018-04-24 13:13:04,367 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:13:04,369 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]ResourceLoader instantiated: org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:13:04,381 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl) with class java.util.Collections$SynchronizedMap cache map.
2018-04-24 13:13:04,383 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Stop
2018-04-24 13:13:04,385 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Define
2018-04-24 13:13:04,386 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Break
2018-04-24 13:13:04,387 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Evaluate
2018-04-24 13:13:04,388 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Literal
2018-04-24 13:13:04,390 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Macro
2018-04-24 13:13:04,392 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Parse
2018-04-24 13:13:04,393 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Include
2018-04-24 13:13:04,394 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Loaded System Directive: org.apache.velocity.runtime.directive.Foreach
2018-04-24 13:13:04,418 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Created '20' parsers.
2018-04-24 13:13:04,427 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : adding VMs from VM library : org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,510 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springMessage: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,511 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springMessageText: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,511 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springTheme: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,511 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springThemeText: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,512 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springUrl: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,512 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springBind: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,512 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springBindEscaped: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,513 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormInput: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,513 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormPasswordInput: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,513 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormHiddenInput: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,514 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormTextarea: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,515 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormSingleSelect: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,516 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormMultiSelect: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,517 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormRadioButtons: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,517 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormCheckboxes: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,518 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springFormCheckbox: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,519 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springShowErrors: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,519 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : added VM springCloseTag: source=org/springframework/web/servlet/view/velocity/spring.vm
2018-04-24 13:13:04,519 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]ResourceManager : found org/springframework/web/servlet/view/velocity/spring.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:13:04,520 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : allowInline = true : VMs can be defined inline in templates
2018-04-24 13:13:04,520 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : allowInlineToOverride = false : VMs defined inline may NOT replace previous VM definitions
2018-04-24 13:13:04,520 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : allowInlineLocal = false : VMs defined inline will be global in scope if allowed.
2018-04-24 13:13:04,520 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[localhost-startStop-1]Velocimacro : autoload off : VM system will not automatically reload global library macros
2018-04-24 13:13:04,548 INFO [org.springframework.web.servlet.DispatcherServlet]initServletBean(line:473)[localhost-startStop-1]FrameworkServlet 'spring': initialization completed in 2703 ms
2018-04-24 13:13:28,910 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:13:53,013 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:14:00,074 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:14:00,075 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 13:14:00,076 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-1]开始执行B2C退款指令任务...
2018-04-24 13:14:00,097 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:14:00,097 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:14:00,098 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 13:14:00,341 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100001} Connection
2018-04-24 13:14:00,341 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100000} Connection
2018-04-24 13:14:00,346 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100000} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:14:00,346 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100001} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:14:00,423 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100002} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:14:00,423 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100003} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:14:00,424 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100002} Parameters: [2018-04-24 13:14:00.335, 2018-04-24 13:14:00.335]
2018-04-24 13:14:00,424 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100003} Parameters: [3303, 20180423, 20180424]
2018-04-24 13:14:00,425 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100002} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:14:00,425 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100003} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:14:00,445 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100004} ResultSet
2018-04-24 13:14:00,445 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100005} ResultSet
2018-04-24 13:14:00,456 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100006} Connection
2018-04-24 13:14:00,456 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100006} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,456 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100007} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,457 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100007} Parameters: []
2018-04-24 13:14:00,457 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100007} Types: []
2018-04-24 13:14:00,457 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-1]B2C退款指令任务执行完毕...
2018-04-24 13:14:00,462 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100008} ResultSet
2018-04-24 13:14:00,462 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100009} Connection
2018-04-24 13:14:00,462 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100009} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,463 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100010} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,463 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100010} Parameters: []
2018-04-24 13:14:00,463 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100010} Types: []
2018-04-24 13:14:00,469 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100011} ResultSet
2018-04-24 13:14:00,469 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100012} Connection
2018-04-24 13:14:00,470 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100012} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,470 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100013} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,470 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100013} Parameters: []
2018-04-24 13:14:00,470 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100013} Types: []
2018-04-24 13:14:00,474 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100014} ResultSet
2018-04-24 13:14:00,497 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-2]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:14:00,524 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:14:00,577 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 78
2018-04-24 13:14:00,577 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 13:14:00,578 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:14:00,578 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131400499","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131400"}}
2018-04-24 13:14:00,610 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:14:00,611 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 32
2018-04-24 13:14:00,630 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100015} Connection
2018-04-24 13:14:00,630 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100015} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,631 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100016} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:14:00,631 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100016} Parameters: []
2018-04-24 13:14:00,631 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100016} Types: []
2018-04-24 13:14:00,637 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100017} ResultSet
2018-04-24 13:14:00,638 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:14:28,364 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:14:51,882 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:15:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:15:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:15:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 13:15:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100018} Connection
2018-04-24 13:15:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100018} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:15:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100019} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:15:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100019} Parameters: [2018-04-24 13:15:00.003, 2018-04-24 13:15:00.003]
2018-04-24 13:15:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100019} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:15:00,008 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100020} ResultSet
2018-04-24 13:15:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100021} Connection
2018-04-24 13:15:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100021} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100022} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100022} Parameters: []
2018-04-24 13:15:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100022} Types: []
2018-04-24 13:15:00,013 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100023} ResultSet
2018-04-24 13:15:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100024} Connection
2018-04-24 13:15:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100024} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100025} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100025} Parameters: []
2018-04-24 13:15:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100025} Types: []
2018-04-24 13:15:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100026} ResultSet
2018-04-24 13:15:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100027} Connection
2018-04-24 13:15:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100027} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100028} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100028} Parameters: []
2018-04-24 13:15:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100028} Types: []
2018-04-24 13:15:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100029} ResultSet
2018-04-24 13:15:00,028 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:15:00,028 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:15:00,028 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-4]开始执行资金调拨状态更新任务...
2018-04-24 13:15:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100030} Connection
2018-04-24 13:15:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100030} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:15:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100031} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:15:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100031} Parameters: [4, 20180325, 20180424]
2018-04-24 13:15:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100031} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:15:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100032} ResultSet
2018-04-24 13:15:00,034 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-4]资金调拨状态更新任务执行完毕...
2018-04-24 13:15:00,035 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:15:00,067 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 44
2018-04-24 13:15:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 13:15:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:15:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131500023","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131500"}}
2018-04-24 13:15:00,078 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:15:00,078 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 10
2018-04-24 13:15:00,079 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100033} Connection
2018-04-24 13:15:00,079 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100033} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,079 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100034} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:15:00,079 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100034} Parameters: []
2018-04-24 13:15:00,079 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100034} Types: []
2018-04-24 13:15:00,082 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100035} ResultSet
2018-04-24 13:15:00,083 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:15:29,046 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:15:54,882 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:16:00,020 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:16:00,020 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:16:00,021 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-5]开始执行B2B划款指令状态更新任务...
2018-04-24 13:16:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100036} Connection
2018-04-24 13:16:00,021 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:16:00,021 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:16:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100036} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:16:00,022 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-6]开始执行异常信息监控扫描任务...
2018-04-24 13:16:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100037} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:16:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100037} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:16:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100038} Connection
2018-04-24 13:16:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100037} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:16:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100038} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:16:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100039} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:16:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100039} Parameters: [2018-04-24 13:16:00.022, 2018-04-24 13:16:00.022]
2018-04-24 13:16:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100039} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:16:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100040} ResultSet
2018-04-24 13:16:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100041} ResultSet
2018-04-24 13:16:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100042} Connection
2018-04-24 13:16:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100042} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100043} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100043} Parameters: []
2018-04-24 13:16:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100043} Types: []
2018-04-24 13:16:00,031 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-5]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:16:00,032 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:16:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100044} ResultSet
2018-04-24 13:16:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100045} Connection
2018-04-24 13:16:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100045} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100046} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100046} Parameters: []
2018-04-24 13:16:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100046} Types: []
2018-04-24 13:16:00,038 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100047} ResultSet
2018-04-24 13:16:00,039 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100048} Connection
2018-04-24 13:16:00,039 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100048} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,040 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100049} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,040 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100049} Parameters: []
2018-04-24 13:16:00,040 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100049} Types: []
2018-04-24 13:16:00,043 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100050} ResultSet
2018-04-24 13:16:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Preprocess time - 74
2018-04-24 13:16:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Service - 获取异常监控信息
2018-04-24 13:16:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:16:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131600044","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131600"}}
2018-04-24 13:16:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:16:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Call time - 11
2018-04-24 13:16:00,130 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100051} Connection
2018-04-24 13:16:00,130 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100051} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100052} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:16:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100052} Parameters: []
2018-04-24 13:16:00,131 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100052} Types: []
2018-04-24 13:16:00,135 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100053} ResultSet
2018-04-24 13:16:00,136 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:16:26,840 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:16:56,213 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:17:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:17:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:17:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-7]开始执行异常信息监控扫描任务...
2018-04-24 13:17:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100054} Connection
2018-04-24 13:17:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100054} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:17:00,003 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100055} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:17:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100055} Parameters: [2018-04-24 13:17:00.002, 2018-04-24 13:17:00.002]
2018-04-24 13:17:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100055} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:17:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100056} ResultSet
2018-04-24 13:17:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100057} Connection
2018-04-24 13:17:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100057} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100058} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100058} Parameters: []
2018-04-24 13:17:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100058} Types: []
2018-04-24 13:17:00,008 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100059} ResultSet
2018-04-24 13:17:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100060} Connection
2018-04-24 13:17:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100060} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100061} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100061} Parameters: []
2018-04-24 13:17:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100061} Types: []
2018-04-24 13:17:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100062} ResultSet
2018-04-24 13:17:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100063} Connection
2018-04-24 13:17:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100063} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100064} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100064} Parameters: []
2018-04-24 13:17:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100064} Types: []
2018-04-24 13:17:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100065} ResultSet
2018-04-24 13:17:00,060 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Preprocess time - 44
2018-04-24 13:17:00,060 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Service - 获取异常监控信息
2018-04-24 13:17:00,060 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:17:00,060 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131700015","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131700"}}
2018-04-24 13:17:00,071 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:17:00,072 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Call time - 11
2018-04-24 13:17:00,072 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100066} Connection
2018-04-24 13:17:00,072 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100066} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,072 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100067} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:17:00,073 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100067} Parameters: []
2018-04-24 13:17:00,073 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100067} Types: []
2018-04-24 13:17:00,075 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100068} ResultSet
2018-04-24 13:17:00,077 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:17:26,582 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:17:52,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:18:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:18:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-8]开始执行异常信息监控扫描任务...
2018-04-24 13:18:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:18:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100069} Connection
2018-04-24 13:18:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100069} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:18:00,003 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100070} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:18:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100070} Parameters: [2018-04-24 13:18:00.002, 2018-04-24 13:18:00.002]
2018-04-24 13:18:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100070} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:18:00,007 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100071} ResultSet
2018-04-24 13:18:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100072} Connection
2018-04-24 13:18:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100072} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100073} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100073} Parameters: []
2018-04-24 13:18:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100073} Types: []
2018-04-24 13:18:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100074} ResultSet
2018-04-24 13:18:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100075} Connection
2018-04-24 13:18:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100075} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100076} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100076} Parameters: []
2018-04-24 13:18:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100076} Types: []
2018-04-24 13:18:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100077} ResultSet
2018-04-24 13:18:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100078} Connection
2018-04-24 13:18:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100078} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100079} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100079} Parameters: []
2018-04-24 13:18:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100079} Types: []
2018-04-24 13:18:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100080} ResultSet
2018-04-24 13:18:00,026 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-8]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:18:00,032 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:18:00,032 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 13:18:00,033 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-9]开始执行线下预存明细指令状态更新任务...
2018-04-24 13:18:00,034 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:18:00,034 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:18:00,034 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-10]开始执行资金调拨状态更新任务...
2018-04-24 13:18:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100081} Connection
2018-04-24 13:18:00,035 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100081} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:18:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100082} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:18:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100082} Parameters: [00, 20180423, 20180424]
2018-04-24 13:18:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100082} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:18:00,041 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100083} ResultSet
2018-04-24 13:18:00,042 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-9]线下预存明细指令状态更新任务执行完毕...
2018-04-24 13:18:00,042 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:18:00,071 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Preprocess time - 45
2018-04-24 13:18:00,071 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Service - 获取异常监控信息
2018-04-24 13:18:00,071 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:18:00,072 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131800026","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131800"}}
2018-04-24 13:18:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:18:00,082 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Call time - 10
2018-04-24 13:18:00,082 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100084} Connection
2018-04-24 13:18:00,082 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100084} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,082 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100085} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:18:00,082 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100085} Parameters: []
2018-04-24 13:18:00,083 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100085} Types: []
2018-04-24 13:18:00,085 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100086} ResultSet
2018-04-24 13:18:00,086 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:18:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100087} Connection
2018-04-24 13:18:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100087} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:18:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100088} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:18:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100088} Parameters: [4, 20180325, 20180424]
2018-04-24 13:18:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100088} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:18:00,097 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100089} ResultSet
2018-04-24 13:18:00,098 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-10]资金调拨状态更新任务执行完毕...
2018-04-24 13:18:00,098 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:18:27,301 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:18:52,485 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:19:00,028 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 13:19:00,028 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:19:00,029 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-11]开始执行B2B线下出款指令状态更新任务...
2018-04-24 13:19:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100090} Connection
2018-04-24 13:19:00,031 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:19:00,031 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:19:00,032 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-12]开始执行异常信息监控扫描任务...
2018-04-24 13:19:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100090} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:19:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100091} Connection
2018-04-24 13:19:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100091} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:19:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100093} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:19:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100092} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:19:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100092} Parameters: [01, 20180422, 20180424]
2018-04-24 13:19:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100092} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:19:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100093} Parameters: [2018-04-24 13:19:00.032, 2018-04-24 13:19:00.032]
2018-04-24 13:19:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100093} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:19:00,042 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100094} ResultSet
2018-04-24 13:19:00,043 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100095} ResultSet
2018-04-24 13:19:00,044 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100096} Connection
2018-04-24 13:19:00,044 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100096} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,045 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100097} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,046 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100097} Parameters: []
2018-04-24 13:19:00,046 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100097} Types: []
2018-04-24 13:19:00,045 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-11]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 13:19:00,047 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:19:00,048 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100098} ResultSet
2018-04-24 13:19:00,048 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100099} Connection
2018-04-24 13:19:00,049 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100099} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,050 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100100} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,050 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100100} Parameters: []
2018-04-24 13:19:00,050 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100100} Types: []
2018-04-24 13:19:00,052 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100101} ResultSet
2018-04-24 13:19:00,052 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100102} Connection
2018-04-24 13:19:00,053 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100102} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,053 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100103} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,054 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100103} Parameters: []
2018-04-24 13:19:00,054 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100103} Types: []
2018-04-24 13:19:00,055 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100104} ResultSet
2018-04-24 13:19:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Preprocess time - 73
2018-04-24 13:19:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Service - 获取异常监控信息
2018-04-24 13:19:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:19:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424131900056","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424131900"}}
2018-04-24 13:19:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:19:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Call time - 10
2018-04-24 13:19:00,140 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100105} Connection
2018-04-24 13:19:00,140 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100105} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100106} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:19:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100106} Parameters: []
2018-04-24 13:19:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100106} Types: []
2018-04-24 13:19:00,143 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100107} ResultSet
2018-04-24 13:19:00,144 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:19:24,244 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:19:53,738 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:20:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:20:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:20:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-13]开始执行异常信息监控扫描任务...
2018-04-24 13:20:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100108} Connection
2018-04-24 13:20:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100108} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:20:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100109} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:20:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100109} Parameters: [2018-04-24 13:20:00.005, 2018-04-24 13:20:00.005]
2018-04-24 13:20:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100109} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:20:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100110} ResultSet
2018-04-24 13:20:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100111} Connection
2018-04-24 13:20:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100111} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100112} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100112} Parameters: []
2018-04-24 13:20:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100112} Types: []
2018-04-24 13:20:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100113} ResultSet
2018-04-24 13:20:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100114} Connection
2018-04-24 13:20:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100114} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100115} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100115} Parameters: []
2018-04-24 13:20:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100115} Types: []
2018-04-24 13:20:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100116} ResultSet
2018-04-24 13:20:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100117} Connection
2018-04-24 13:20:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100117} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100118} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100118} Parameters: []
2018-04-24 13:20:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100118} Types: []
2018-04-24 13:20:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100119} ResultSet
2018-04-24 13:20:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Preprocess time - 72
2018-04-24 13:20:00,106 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Service - 获取异常监控信息
2018-04-24 13:20:00,106 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:20:00,106 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132000033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132000"}}
2018-04-24 13:20:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:20:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Call time - 10
2018-04-24 13:20:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100120} Connection
2018-04-24 13:20:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100120} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,117 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100121} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:20:00,117 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100121} Parameters: []
2018-04-24 13:20:00,117 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100121} Types: []
2018-04-24 13:20:00,119 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100122} ResultSet
2018-04-24 13:20:00,120 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:20:29,318 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:20:56,716 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:21:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:21:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-14]开始执行异常信息监控扫描任务...
2018-04-24 13:21:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:21:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100123} Connection
2018-04-24 13:21:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:21:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100123} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:21:00,032 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:21:00,033 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-15]开始执行资金调拨状态更新任务...
2018-04-24 13:21:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100125} Connection
2018-04-24 13:21:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100125} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:21:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100126} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:21:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100126} Parameters: [4, 20180325, 20180424]
2018-04-24 13:21:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100126} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:21:00,041 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100127} ResultSet
2018-04-24 13:21:00,043 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-15]资金调拨状态更新任务执行完毕...
2018-04-24 13:21:00,043 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100124} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:21:00,043 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:21:00,043 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100124} Parameters: [2018-04-24 13:21:00.002, 2018-04-24 13:21:00.002]
2018-04-24 13:21:00,044 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100124} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:21:00,046 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100128} ResultSet
2018-04-24 13:21:00,047 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100129} Connection
2018-04-24 13:21:00,047 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100129} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,048 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100130} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,048 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100130} Parameters: []
2018-04-24 13:21:00,048 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100130} Types: []
2018-04-24 13:21:00,050 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100131} ResultSet
2018-04-24 13:21:00,050 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100132} Connection
2018-04-24 13:21:00,051 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100132} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,051 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100133} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,051 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100133} Parameters: []
2018-04-24 13:21:00,051 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100133} Types: []
2018-04-24 13:21:00,053 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100134} ResultSet
2018-04-24 13:21:00,053 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100135} Connection
2018-04-24 13:21:00,054 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100135} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,054 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100136} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,054 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100136} Parameters: []
2018-04-24 13:21:00,054 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100136} Types: []
2018-04-24 13:21:00,056 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100137} ResultSet
2018-04-24 13:21:00,056 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-14]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:21:00,098 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Preprocess time - 41
2018-04-24 13:21:00,098 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Service - 获取异常监控信息
2018-04-24 13:21:00,099 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:21:00,099 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132100057","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132100"}}
2018-04-24 13:21:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:21:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Call time - 10
2018-04-24 13:21:00,109 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100138} Connection
2018-04-24 13:21:00,109 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100138} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,109 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100139} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:21:00,109 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100139} Parameters: []
2018-04-24 13:21:00,109 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100139} Types: []
2018-04-24 13:21:00,111 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100140} ResultSet
2018-04-24 13:21:00,112 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:21:24,978 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:21:51,419 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:22:00,011 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.ProcessB2BRefundCmdJob
2018-04-24 13:22:00,011 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:22:00,011 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-1]开始执行B2B退款指令任务...
2018-04-24 13:22:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100141} Connection
2018-04-24 13:22:00,013 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:22:00,014 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 13:22:00,013 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:22:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100142} Connection
2018-04-24 13:22:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100141} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:22:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100142} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:22:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100143} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:22:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100143} Parameters: [1316, 20180423, 20180424]
2018-04-24 13:22:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100144} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:22:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100143} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:22:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100144} Parameters: [2018-04-24 13:22:00.014, 2018-04-24 13:22:00.014]
2018-04-24 13:22:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100144} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:22:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100145} ResultSet
2018-04-24 13:22:00,025 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-1]B2B退款指令任务执行完毕...
2018-04-24 13:22:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100146} ResultSet
2018-04-24 13:22:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100147} Connection
2018-04-24 13:22:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100147} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,027 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:22:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100148} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100148} Parameters: []
2018-04-24 13:22:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100148} Types: []
2018-04-24 13:22:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100149} ResultSet
2018-04-24 13:22:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100150} Connection
2018-04-24 13:22:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100150} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100151} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100151} Parameters: []
2018-04-24 13:22:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100151} Types: []
2018-04-24 13:22:00,036 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100152} ResultSet
2018-04-24 13:22:00,036 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100153} Connection
2018-04-24 13:22:00,036 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100153} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,037 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100154} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,037 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100154} Parameters: []
2018-04-24 13:22:00,037 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100154} Types: []
2018-04-24 13:22:00,045 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100155} ResultSet
2018-04-24 13:22:00,087 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 42
2018-04-24 13:22:00,087 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 13:22:00,087 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:22:00,088 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132200045","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132200"}}
2018-04-24 13:22:00,097 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:22:00,097 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 10
2018-04-24 13:22:00,097 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100156} Connection
2018-04-24 13:22:00,098 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100156} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,098 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100157} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:22:00,098 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100157} Parameters: []
2018-04-24 13:22:00,098 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100157} Types: []
2018-04-24 13:22:00,105 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100158} ResultSet
2018-04-24 13:22:00,106 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:22:09,203 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:22:09,204 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:22:09,204 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:22:09,204 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-4]开始执行B2B划款指令状态更新任务...
2018-04-24 13:22:09,204 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100159} Connection
2018-04-24 13:22:09,205 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100159} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:22:09,205 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100160} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:22:09,205 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100160} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:22:09,205 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100160} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:22:09,209 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100161} ResultSet
2018-04-24 13:22:09,210 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100161} Header: [CMD_ID, CMD_TYPE, CMD_SERIAL_NO, REQ_TIME, CMD_STATE, CREATE_TIME, RTRX_SERIAL_NO, RTN_CODE, ERTN_CODE, ERTN_INFO, RDO_TIME, MSG_RECEIVER, DBT_CODE, DRACC_NO, DRACC_NAME, DRACC_BANK_CODE, DRACC_BANK_BRANCH, PAY_CURRENCY, PAY_COUNT, PAY_AMOUNT, PAY_PRI, VLD_DATE, CRT_CODE, CRACC_NO, CRACC_NAME, CRACC_BANK_CODE, CRACC_BANK_BRANCH, REQ_SPT1, REQ_SPT2, REQ_SPT3, REQ_MEMO, BATCH_SERIAL_NO, OTRX_SERIAL_NO, ORG_ID]
2018-04-24 13:22:09,211 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100161} Result: [5076889007110910008, 10, EP201710111027361000002025, null, QS, 2018-04-24 09:40:38.0, null, null, null, null, null, CMBC000, 674612978, 6226220506989926, 备付金民生测试银行, 305393000808, 民生银行, CNY, 1, 13, 00, 2017-10-11 10:26:30.0, 398788992, 1234567894548787, 西域公司, SPDB000, 上海浦东发展银行, null, null, null, ORD0001, null, EPLATBB2016060900000006377, 1234567]
2018-04-24 13:22:09,211 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100162} Connection
2018-04-24 13:22:09,213 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100162} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     TRX_TYPE in              (                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   )                            AND TRX_SERIAL_NO in              (                    ?                   )                                                            order by create_time desc  
2018-04-24 13:22:09,213 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100163} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     TRX_TYPE in              (                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   ,                    ?                   )                            AND TRX_SERIAL_NO in              (                    ?                   )                                                            order by create_time desc  
2018-04-24 13:22:09,214 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100163} Parameters: [9338, 9308, 611141, 615141, 611341, 615341, EP201710111027361000002025]
2018-04-24 13:22:09,214 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100163} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:22:09,234 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100164} ResultSet
2018-04-24 13:22:09,329 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/job.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,401 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/job.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,405 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/macro/macros.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,423 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]Velocimacro : added VM history: source=org/n3r/quartz/glass/velocity/macro/history.vm
2018-04-24 13:22:09,423 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/macro/history.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,424 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/widgets/head.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,425 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/widgets/menu.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,452 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/widgets/args.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:09,476 DEBUG [org.apache.velocity.app.VelocityEngine]logVelocityMessage(line:58)[http-bio-8091-exec-2]ResourceManager : found org/n3r/quartz/glass/velocity/widgets/footer.vm with loader org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
2018-04-24 13:22:12,317 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100165} Connection
2018-04-24 13:22:12,318 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100165} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     TRX_TYPE in              (                    ?                   ,                    ?                   ,                    ?                   )                                         AND OTRX_SERIAL_NO in              (                    ?                   )                                               order by create_time desc  
2018-04-24 13:22:12,319 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100166} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     TRX_TYPE in              (                    ?                   ,                    ?                   ,                    ?                   )                                         AND OTRX_SERIAL_NO in              (                    ?                   )                                               order by create_time desc  
2018-04-24 13:22:12,319 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100166} Parameters: [1605, 610142, 610342, EPLATBB2016060900000006377]
2018-04-24 13:22:12,319 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100166} Types: [java.lang.String, java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:22:12,329 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100167} ResultSet
2018-04-24 13:22:12,330 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100167} Header: [ID, CUS_BILL_NO, PLAT_BILL_NO, TRX_SERIAL_NO, OTRX_SERIAL_NO, ETRX_SERIAL_NO, TRX_STATE, CRACC_CUS_CODE, CRACC_CUS_TYPE, CRACC_NO, CRACC_NAME, CRACC_NODE_CODE, CRACC_BANK_NAME, DRACC_CUS_CODE, DRACC_CUS_TYPE, DRACC_NO, DRACC_NAME, DRACC_NODE_CODE, DRACC_BANK_NAME, PAY_CURRENCY, PAY_AMOUNT, BUSS_TYPE, TRX_TYPE, PAY_WAY, SAC_FLAG, INN_CON_FLAG, INN_CON_STATUS, PAYCON_TYPE, CHA_CON_FLAG, CHA_CON_STATUS, TRX_BATCH_NO, UPDATE_TIME, CREATE_TIME, MEMO, TRX_ERR_DEAL_TYPE, EX_RATE, SAC_CURRENCY, SAC_AMOUNT, CRACC_CUS_NAME, DRACC_CUS_NAME, TAX_AMOUNT, TRANSPORT_EXPENSES, ACCOUNT_STATUS, REVERSAL_STATUS, CHANNEL_COST, CUS_CHARGE, TRX_TIME, TRX_SUCC_TIME, CRACC_CARD_ID, DRACC_CARD_ID, REMITTANCE_BATCH_ID]
2018-04-24 13:22:12,330 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100167} Result: [4654844831071311002, null, null, EPLATBB2016060900000006379, EPLATBB2016060900000006377, EPLATBB2016060900000006379, S, 1000000000674612978, 1, 9012241020009990014, 支付平台暂挂款账户, EPLATBB, b2b支付平台, 1000000000745647319, 1, 2012241010494640015, 上海中外运船务代理有限公司, EPLATBB, b2b支付平台, CNY, 2205, 20, 1605, 1, N, S, S, 1, N, N, TRXNOTINBATCH, 2016-06-13 11:09:57.834, 2018-04-24 09:36:55.0, null, null, 0, null, null, 支付平台暂挂款账户, 上海中外运船务代理有限公司, null, null, N, N, 0, 0, 2016-06-09 23:00:00.634, 2016-06-09 23:00:00.634, 674612978, 745647319, null]
2018-04-24 13:22:12,332 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100168} Connection
2018-04-24 13:22:12,334 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100168} Preparing Statement:          UPDATE SAC_B2B_COMMAND                 SET                                         CMD_SERIAL_NO = ?                            ,  CMD_STATE = ?                                                                                                                                                                                                                                                                                                                                                                                                            WHERE CMD_SERIAL_NO = ?    
2018-04-24 13:22:12,334 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100169} Executing Statement:          UPDATE SAC_B2B_COMMAND                 SET                                         CMD_SERIAL_NO = ?                            ,  CMD_STATE = ?                                                                                                                                                                                                                                                                                                                                                                                                            WHERE CMD_SERIAL_NO = ?    
2018-04-24 13:22:12,334 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100169} Parameters: [EP201710111027361000002025, F, EP201710111027361000002025]
2018-04-24 13:22:12,335 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100169} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:22:12,352 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-4]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:22:12,352 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:22:39,765 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:23:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:23:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:23:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 13:23:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100170} Connection
2018-04-24 13:23:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100170} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:23:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100171} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:23:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100171} Parameters: [2018-04-24 13:23:00.004, 2018-04-24 13:23:00.004]
2018-04-24 13:23:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100171} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:23:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100172} ResultSet
2018-04-24 13:23:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100173} Connection
2018-04-24 13:23:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100173} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100174} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100174} Parameters: []
2018-04-24 13:23:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100174} Types: []
2018-04-24 13:23:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100175} ResultSet
2018-04-24 13:23:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100176} Connection
2018-04-24 13:23:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100176} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100177} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100177} Parameters: []
2018-04-24 13:23:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100177} Types: []
2018-04-24 13:23:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100178} ResultSet
2018-04-24 13:23:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100179} Connection
2018-04-24 13:23:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100179} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100180} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100180} Parameters: []
2018-04-24 13:23:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100180} Types: []
2018-04-24 13:23:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100181} ResultSet
2018-04-24 13:23:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 58
2018-04-24 13:23:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 13:23:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:23:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132300031","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132300"}}
2018-04-24 13:23:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:23:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 10
2018-04-24 13:23:00,101 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100182} Connection
2018-04-24 13:23:00,101 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100182} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,102 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100183} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:23:00,102 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100183} Parameters: []
2018-04-24 13:23:00,102 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100183} Types: []
2018-04-24 13:23:00,104 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100184} ResultSet
2018-04-24 13:23:00,106 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:23:27,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:23:55,572 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:24:00,004 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 13:24:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:24:00,005 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-5]开始执行B2C退款指令任务...
2018-04-24 13:24:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100185} Connection
2018-04-24 13:24:00,011 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:24:00,012 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:24:00,012 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-6]开始执行异常信息监控扫描任务...
2018-04-24 13:24:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100186} Connection
2018-04-24 13:24:00,014 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:24:00,015 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:24:00,015 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-7]开始执行资金调拨状态更新任务...
2018-04-24 13:24:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100185} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:24:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100187} Connection
2018-04-24 13:24:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100186} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:24:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100187} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:24:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100188} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:24:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100188} Parameters: [3303, 20180423, 20180424]
2018-04-24 13:24:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100190} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:24:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100189} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:24:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100189} Parameters: [2018-04-24 13:24:00.013, 2018-04-24 13:24:00.013]
2018-04-24 13:24:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100190} Parameters: [4, 20180325, 20180424]
2018-04-24 13:24:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100190} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:24:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100188} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:24:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100189} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:24:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100191} ResultSet
2018-04-24 13:24:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100192} ResultSet
2018-04-24 13:24:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100193} Connection
2018-04-24 13:24:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100193} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100194} ResultSet
2018-04-24 13:24:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100195} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,033 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-7]资金调拨状态更新任务执行完毕...
2018-04-24 13:24:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100195} Parameters: []
2018-04-24 13:24:00,034 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:24:00,034 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-5]B2C退款指令任务执行完毕...
2018-04-24 13:24:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100195} Types: []
2018-04-24 13:24:00,034 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:24:00,035 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100196} ResultSet
2018-04-24 13:24:00,035 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100197} Connection
2018-04-24 13:24:00,035 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100197} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100198} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100198} Parameters: []
2018-04-24 13:24:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100198} Types: []
2018-04-24 13:24:00,037 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100199} ResultSet
2018-04-24 13:24:00,037 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100200} Connection
2018-04-24 13:24:00,037 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100200} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100201} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100201} Parameters: []
2018-04-24 13:24:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100201} Types: []
2018-04-24 13:24:00,039 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100202} ResultSet
2018-04-24 13:24:00,080 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Preprocess time - 41
2018-04-24 13:24:00,080 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Service - 获取异常监控信息
2018-04-24 13:24:00,080 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:24:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132400039","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132400"}}
2018-04-24 13:24:00,091 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:24:00,091 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Call time - 11
2018-04-24 13:24:00,091 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100203} Connection
2018-04-24 13:24:00,091 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100203} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,092 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100204} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:24:00,092 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100204} Parameters: []
2018-04-24 13:24:00,092 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100204} Types: []
2018-04-24 13:24:00,095 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100205} ResultSet
2018-04-24 13:24:00,096 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:24:27,404 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:24:51,262 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:25:00,000 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:25:00,000 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:25:00,001 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-9]开始执行异常信息监控扫描任务...
2018-04-24 13:25:00,001 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100206} Connection
2018-04-24 13:25:00,001 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100206} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:25:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100207} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:25:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100207} Parameters: [2018-04-24 13:25:00.001, 2018-04-24 13:25:00.001]
2018-04-24 13:25:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100207} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:25:00,004 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100208} ResultSet
2018-04-24 13:25:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100209} Connection
2018-04-24 13:25:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100209} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100210} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100210} Parameters: []
2018-04-24 13:25:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100210} Types: []
2018-04-24 13:25:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100211} ResultSet
2018-04-24 13:25:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100212} Connection
2018-04-24 13:25:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100212} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100213} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100213} Parameters: []
2018-04-24 13:25:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100213} Types: []
2018-04-24 13:25:00,008 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100214} ResultSet
2018-04-24 13:25:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100215} Connection
2018-04-24 13:25:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100215} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100216} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100216} Parameters: []
2018-04-24 13:25:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100216} Types: []
2018-04-24 13:25:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100217} ResultSet
2018-04-24 13:25:00,011 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-9]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:25:00,058 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Preprocess time - 47
2018-04-24 13:25:00,058 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Service - 获取异常监控信息
2018-04-24 13:25:00,059 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:25:00,059 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132500011","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132500"}}
2018-04-24 13:25:00,069 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:25:00,069 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Call time - 11
2018-04-24 13:25:00,070 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100218} Connection
2018-04-24 13:25:00,070 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100218} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,071 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100219} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:25:00,071 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100219} Parameters: []
2018-04-24 13:25:00,071 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100219} Types: []
2018-04-24 13:25:00,073 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100220} ResultSet
2018-04-24 13:25:00,074 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:25:25,360 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:25:50,841 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:26:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:26:00,001 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-8]开始执行B2B划款指令状态更新任务...
2018-04-24 13:26:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:26:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100221} Connection
2018-04-24 13:26:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100221} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:26:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:26:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:26:00,005 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-10]开始执行异常信息监控扫描任务...
2018-04-24 13:26:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100222} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:26:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100223} Connection
2018-04-24 13:26:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100222} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:26:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100223} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:26:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100222} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:26:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100224} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:26:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100224} Parameters: [2018-04-24 13:26:00.006, 2018-04-24 13:26:00.006]
2018-04-24 13:26:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100224} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:26:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100225} ResultSet
2018-04-24 13:26:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100226} Connection
2018-04-24 13:26:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100226} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100227} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100227} Parameters: []
2018-04-24 13:26:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100227} Types: []
2018-04-24 13:26:00,013 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100228} ResultSet
2018-04-24 13:26:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100229} ResultSet
2018-04-24 13:26:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100230} Connection
2018-04-24 13:26:00,016 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-8]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:26:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100230} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,016 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:26:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100231} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100231} Parameters: []
2018-04-24 13:26:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100231} Types: []
2018-04-24 13:26:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100232} ResultSet
2018-04-24 13:26:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100233} Connection
2018-04-24 13:26:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100233} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100234} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100234} Parameters: []
2018-04-24 13:26:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100234} Types: []
2018-04-24 13:26:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100235} ResultSet
2018-04-24 13:26:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Preprocess time - 45
2018-04-24 13:26:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Service - 获取异常监控信息
2018-04-24 13:26:00,068 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:26:00,069 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132600023","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132600"}}
2018-04-24 13:26:00,079 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:26:00,079 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Call time - 10
2018-04-24 13:26:00,079 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100236} Connection
2018-04-24 13:26:00,079 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100236} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,080 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100237} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:26:00,080 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100237} Parameters: []
2018-04-24 13:26:00,080 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100237} Types: []
2018-04-24 13:26:00,083 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100238} ResultSet
2018-04-24 13:26:00,085 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:26:26,986 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:26:53,665 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:27:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:27:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-11]开始执行异常信息监控扫描任务...
2018-04-24 13:27:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:27:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100239} Connection
2018-04-24 13:27:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100239} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:27:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100240} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:27:00,004 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:27:00,005 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-12]开始执行资金调拨状态更新任务...
2018-04-24 13:27:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:27:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100240} Parameters: [2018-04-24 13:27:00.002, 2018-04-24 13:27:00.002]
2018-04-24 13:27:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100241} Connection
2018-04-24 13:27:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100240} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:27:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100241} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:27:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100242} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:27:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100242} Parameters: [4, 20180325, 20180424]
2018-04-24 13:27:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100242} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:27:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100243} ResultSet
2018-04-24 13:27:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100244} ResultSet
2018-04-24 13:27:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100245} Connection
2018-04-24 13:27:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100245} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100246} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100246} Parameters: []
2018-04-24 13:27:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100246} Types: []
2018-04-24 13:27:00,015 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-12]资金调拨状态更新任务执行完毕...
2018-04-24 13:27:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100247} ResultSet
2018-04-24 13:27:00,016 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:27:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100248} Connection
2018-04-24 13:27:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100248} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100249} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100249} Parameters: []
2018-04-24 13:27:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100249} Types: []
2018-04-24 13:27:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100250} ResultSet
2018-04-24 13:27:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100251} Connection
2018-04-24 13:27:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100251} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100252} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100252} Parameters: []
2018-04-24 13:27:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100252} Types: []
2018-04-24 13:27:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100253} ResultSet
2018-04-24 13:27:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Preprocess time - 81
2018-04-24 13:27:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Service - 获取异常监控信息
2018-04-24 13:27:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:27:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132700024","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132700"}}
2018-04-24 13:27:00,115 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:27:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Call time - 10
2018-04-24 13:27:00,116 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100254} Connection
2018-04-24 13:27:00,116 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100254} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,116 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100255} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:27:00,116 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100255} Parameters: []
2018-04-24 13:27:00,116 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100255} Types: []
2018-04-24 13:27:00,119 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100256} ResultSet
2018-04-24 13:27:00,120 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:27:27,071 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:27:51,544 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:28:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:28:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-13]开始执行异常信息监控扫描任务...
2018-04-24 13:28:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:28:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100257} Connection
2018-04-24 13:28:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100257} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:28:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 13:28:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:28:00,010 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-15]开始执行线下预存明细指令状态更新任务...
2018-04-24 13:28:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100258} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:28:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100259} Connection
2018-04-24 13:28:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100258} Parameters: [2018-04-24 13:28:00.004, 2018-04-24 13:28:00.004]
2018-04-24 13:28:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100259} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:28:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100258} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:28:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100260} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:28:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100260} Parameters: [00, 20180423, 20180424]
2018-04-24 13:28:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100260} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:28:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100261} ResultSet
2018-04-24 13:28:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100262} ResultSet
2018-04-24 13:28:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100263} Connection
2018-04-24 13:28:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100263} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100264} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100264} Parameters: []
2018-04-24 13:28:00,028 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-15]线下预存明细指令状态更新任务执行完毕...
2018-04-24 13:28:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100264} Types: []
2018-04-24 13:28:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:28:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100265} ResultSet
2018-04-24 13:28:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100266} Connection
2018-04-24 13:28:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100266} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100267} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100267} Parameters: []
2018-04-24 13:28:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100267} Types: []
2018-04-24 13:28:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100268} ResultSet
2018-04-24 13:28:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100269} Connection
2018-04-24 13:28:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100269} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100270} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100270} Parameters: []
2018-04-24 13:28:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100270} Types: []
2018-04-24 13:28:00,035 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100271} ResultSet
2018-04-24 13:28:00,036 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-13]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:28:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Preprocess time - 64
2018-04-24 13:28:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Service - 获取异常监控信息
2018-04-24 13:28:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:28:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132800036","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132800"}}
2018-04-24 13:28:00,112 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:28:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Call time - 11
2018-04-24 13:28:00,113 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100272} Connection
2018-04-24 13:28:00,113 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100272} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100273} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:28:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100273} Parameters: []
2018-04-24 13:28:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100273} Types: []
2018-04-24 13:28:00,117 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100274} ResultSet
2018-04-24 13:28:00,118 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:28:27,507 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:28:53,178 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:29:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 13:29:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-14]开始执行B2B线下出款指令状态更新任务...
2018-04-24 13:29:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:29:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100275} Connection
2018-04-24 13:29:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100275} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:29:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:29:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100276} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:29:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100276} Parameters: [01, 20180422, 20180424]
2018-04-24 13:29:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100276} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:29:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:29:00,008 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-1]开始执行异常信息监控扫描任务...
2018-04-24 13:29:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100277} Connection
2018-04-24 13:29:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100277} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:29:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100279} ResultSet
2018-04-24 13:29:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100278} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:29:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100278} Parameters: [2018-04-24 13:29:00.009, 2018-04-24 13:29:00.009]
2018-04-24 13:29:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100278} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:29:00,012 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-14]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 13:29:00,013 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100280} ResultSet
2018-04-24 13:29:00,013 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:29:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100281} Connection
2018-04-24 13:29:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100281} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100282} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100282} Parameters: []
2018-04-24 13:29:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100282} Types: []
2018-04-24 13:29:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100283} ResultSet
2018-04-24 13:29:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100284} Connection
2018-04-24 13:29:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100284} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100285} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100285} Parameters: []
2018-04-24 13:29:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100285} Types: []
2018-04-24 13:29:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100286} ResultSet
2018-04-24 13:29:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100287} Connection
2018-04-24 13:29:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100287} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100288} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100288} Parameters: []
2018-04-24 13:29:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100288} Types: []
2018-04-24 13:29:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100289} ResultSet
2018-04-24 13:29:00,095 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Preprocess time - 71
2018-04-24 13:29:00,096 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Service - 获取异常监控信息
2018-04-24 13:29:00,096 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:29:00,096 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424132900024","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424132900"}}
2018-04-24 13:29:00,107 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:29:00,107 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Call time - 11
2018-04-24 13:29:00,107 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100290} Connection
2018-04-24 13:29:00,108 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100290} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,108 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100291} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:29:00,108 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100291} Parameters: []
2018-04-24 13:29:00,108 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100291} Types: []
2018-04-24 13:29:00,110 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100292} ResultSet
2018-04-24 13:29:00,111 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:29:23,942 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:29:51,501 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:30:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:30:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 13:30:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:30:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100293} Connection
2018-04-24 13:30:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100293} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:30:00,007 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:30:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100294} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:30:00,007 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:30:00,009 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-4]开始执行资金调拨状态更新任务...
2018-04-24 13:30:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100294} Parameters: [2018-04-24 13:30:00.004, 2018-04-24 13:30:00.004]
2018-04-24 13:30:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100294} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:30:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100295} Connection
2018-04-24 13:30:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100295} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:30:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100296} ResultSet
2018-04-24 13:30:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100297} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:30:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100297} Parameters: [4, 20180325, 20180424]
2018-04-24 13:30:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100298} Connection
2018-04-24 13:30:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100297} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:30:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100298} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100299} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100300} ResultSet
2018-04-24 13:30:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100299} Parameters: []
2018-04-24 13:30:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100299} Types: []
2018-04-24 13:30:00,027 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-4]资金调拨状态更新任务执行完毕...
2018-04-24 13:30:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100301} ResultSet
2018-04-24 13:30:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:30:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100302} Connection
2018-04-24 13:30:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100302} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100303} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100303} Parameters: []
2018-04-24 13:30:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100303} Types: []
2018-04-24 13:30:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100304} ResultSet
2018-04-24 13:30:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100305} Connection
2018-04-24 13:30:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100305} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100306} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100306} Parameters: []
2018-04-24 13:30:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100306} Types: []
2018-04-24 13:30:00,036 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100307} ResultSet
2018-04-24 13:30:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 81
2018-04-24 13:30:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 13:30:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:30:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133000037","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133000"}}
2018-04-24 13:30:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:30:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 10
2018-04-24 13:30:00,129 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100308} Connection
2018-04-24 13:30:00,129 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100308} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,129 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100309} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:30:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100309} Parameters: []
2018-04-24 13:30:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100309} Types: []
2018-04-24 13:30:00,132 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100310} ResultSet
2018-04-24 13:30:00,133 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:30:24,568 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:30:49,886 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:31:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:31:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:31:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 13:31:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100311} Connection
2018-04-24 13:31:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100311} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:31:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100312} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:31:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100312} Parameters: [2018-04-24 13:31:00.005, 2018-04-24 13:31:00.005]
2018-04-24 13:31:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100312} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:31:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100313} ResultSet
2018-04-24 13:31:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100314} Connection
2018-04-24 13:31:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100314} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100315} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100315} Parameters: []
2018-04-24 13:31:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100315} Types: []
2018-04-24 13:31:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100316} ResultSet
2018-04-24 13:31:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100317} Connection
2018-04-24 13:31:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100317} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100318} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100318} Parameters: []
2018-04-24 13:31:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100318} Types: []
2018-04-24 13:31:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100319} ResultSet
2018-04-24 13:31:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100320} Connection
2018-04-24 13:31:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100320} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100321} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100321} Parameters: []
2018-04-24 13:31:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100321} Types: []
2018-04-24 13:31:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100322} ResultSet
2018-04-24 13:31:00,112 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 82
2018-04-24 13:31:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 13:31:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:31:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133100030","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133100"}}
2018-04-24 13:31:00,122 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:31:00,123 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 9
2018-04-24 13:31:00,123 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100323} Connection
2018-04-24 13:31:00,123 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100323} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,123 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100324} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:31:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100324} Parameters: []
2018-04-24 13:31:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100324} Types: []
2018-04-24 13:31:00,126 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100325} ResultSet
2018-04-24 13:31:00,127 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:31:24,668 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:31:51,624 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:32:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.ProcessB2BRefundCmdJob
2018-04-24 13:32:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:32:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-7]开始执行B2B退款指令任务...
2018-04-24 13:32:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:32:00,007 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:32:00,007 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-5]开始执行异常信息监控扫描任务...
2018-04-24 13:32:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100326} Connection
2018-04-24 13:32:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100327} Connection
2018-04-24 13:32:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100327} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:32:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100326} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:32:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100328} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:32:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100329} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:32:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100328} Parameters: [2018-04-24 13:32:00.008, 2018-04-24 13:32:00.008]
2018-04-24 13:32:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100329} Parameters: [1316, 20180423, 20180424]
2018-04-24 13:32:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100328} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:32:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100329} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:32:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100330} ResultSet
2018-04-24 13:32:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100331} ResultSet
2018-04-24 13:32:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100332} Connection
2018-04-24 13:32:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100332} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,022 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-7]B2B退款指令任务执行完毕...
2018-04-24 13:32:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100333} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,024 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:32:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100333} Parameters: []
2018-04-24 13:32:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100333} Types: []
2018-04-24 13:32:00,028 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100334} ResultSet
2018-04-24 13:32:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100335} Connection
2018-04-24 13:32:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100335} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100336} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100336} Parameters: []
2018-04-24 13:32:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100336} Types: []
2018-04-24 13:32:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100337} ResultSet
2018-04-24 13:32:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100338} Connection
2018-04-24 13:32:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100338} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100339} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100339} Parameters: []
2018-04-24 13:32:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100339} Types: []
2018-04-24 13:32:00,035 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100340} ResultSet
2018-04-24 13:32:00,036 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-5]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:32:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Preprocess time - 89
2018-04-24 13:32:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Service - 获取异常监控信息
2018-04-24 13:32:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:32:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133200036","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133200"}}
2018-04-24 13:32:00,136 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:32:00,136 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Call time - 11
2018-04-24 13:32:00,136 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100341} Connection
2018-04-24 13:32:00,136 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100341} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,136 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100342} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:32:00,137 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100342} Parameters: []
2018-04-24 13:32:00,137 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100342} Types: []
2018-04-24 13:32:00,140 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100343} ResultSet
2018-04-24 13:32:00,141 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:32:23,912 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:32:48,236 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:33:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:33:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:33:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-6]开始执行异常信息监控扫描任务...
2018-04-24 13:33:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100344} Connection
2018-04-24 13:33:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:33:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:33:00,007 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-9]开始执行资金调拨状态更新任务...
2018-04-24 13:33:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100344} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:33:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100345} Connection
2018-04-24 13:33:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100346} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:33:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100345} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:33:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100346} Parameters: [2018-04-24 13:33:00.005, 2018-04-24 13:33:00.005]
2018-04-24 13:33:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100347} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:33:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100346} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:33:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100347} Parameters: [4, 20180325, 20180424]
2018-04-24 13:33:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100347} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:33:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100348} ResultSet
2018-04-24 13:33:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100349} Connection
2018-04-24 13:33:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100350} ResultSet
2018-04-24 13:33:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100349} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100351} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,021 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-9]资金调拨状态更新任务执行完毕...
2018-04-24 13:33:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100351} Parameters: []
2018-04-24 13:33:00,023 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:33:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100351} Types: []
2018-04-24 13:33:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100352} ResultSet
2018-04-24 13:33:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100353} Connection
2018-04-24 13:33:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100353} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100354} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100354} Parameters: []
2018-04-24 13:33:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100354} Types: []
2018-04-24 13:33:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100355} ResultSet
2018-04-24 13:33:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100356} Connection
2018-04-24 13:33:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100356} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100357} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100357} Parameters: []
2018-04-24 13:33:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100357} Types: []
2018-04-24 13:33:00,034 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100358} ResultSet
2018-04-24 13:33:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Preprocess time - 119
2018-04-24 13:33:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Service - 获取异常监控信息
2018-04-24 13:33:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:33:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133300035","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133300"}}
2018-04-24 13:33:00,165 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:33:00,165 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Call time - 11
2018-04-24 13:33:00,165 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100359} Connection
2018-04-24 13:33:00,166 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100359} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,166 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100360} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:33:00,166 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100360} Parameters: []
2018-04-24 13:33:00,166 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100360} Types: []
2018-04-24 13:33:00,169 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100361} ResultSet
2018-04-24 13:33:00,170 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:33:23,761 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:33:53,030 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:34:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 13:34:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-8]开始执行B2C退款指令任务...
2018-04-24 13:34:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:34:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100362} Connection
2018-04-24 13:34:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:34:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:34:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-10]开始执行异常信息监控扫描任务...
2018-04-24 13:34:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100362} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:34:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100363} Connection
2018-04-24 13:34:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100364} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:34:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100364} Parameters: [3303, 20180423, 20180424]
2018-04-24 13:34:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100364} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:34:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100363} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:34:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100365} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:34:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100366} ResultSet
2018-04-24 13:34:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100365} Parameters: [2018-04-24 13:34:00.007, 2018-04-24 13:34:00.007]
2018-04-24 13:34:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100365} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:34:00,018 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-8]B2C退款指令任务执行完毕...
2018-04-24 13:34:00,019 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:34:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100367} ResultSet
2018-04-24 13:34:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100368} Connection
2018-04-24 13:34:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100368} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100369} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100369} Parameters: []
2018-04-24 13:34:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100369} Types: []
2018-04-24 13:34:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100370} ResultSet
2018-04-24 13:34:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100371} Connection
2018-04-24 13:34:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100371} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100372} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100372} Parameters: []
2018-04-24 13:34:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100372} Types: []
2018-04-24 13:34:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100373} ResultSet
2018-04-24 13:34:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100374} Connection
2018-04-24 13:34:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100374} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100375} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100375} Parameters: []
2018-04-24 13:34:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100375} Types: []
2018-04-24 13:34:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100376} ResultSet
2018-04-24 13:34:00,127 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Preprocess time - 95
2018-04-24 13:34:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Service - 获取异常监控信息
2018-04-24 13:34:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:34:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133400032","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133400"}}
2018-04-24 13:34:00,138 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:34:00,138 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Call time - 10
2018-04-24 13:34:00,138 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100377} Connection
2018-04-24 13:34:00,139 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100377} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,139 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100378} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:34:00,139 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100378} Parameters: []
2018-04-24 13:34:00,139 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100378} Types: []
2018-04-24 13:34:00,141 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100379} ResultSet
2018-04-24 13:34:00,142 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:34:26,639 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:34:54,064 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:35:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:35:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:35:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-12]开始执行异常信息监控扫描任务...
2018-04-24 13:35:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100380} Connection
2018-04-24 13:35:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100380} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:35:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100381} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:35:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100381} Parameters: [2018-04-24 13:35:00.004, 2018-04-24 13:35:00.004]
2018-04-24 13:35:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100381} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:35:00,009 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100382} ResultSet
2018-04-24 13:35:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100383} Connection
2018-04-24 13:35:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100383} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100384} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100384} Parameters: []
2018-04-24 13:35:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100384} Types: []
2018-04-24 13:35:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100385} ResultSet
2018-04-24 13:35:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100386} Connection
2018-04-24 13:35:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100386} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100387} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100387} Parameters: []
2018-04-24 13:35:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100387} Types: []
2018-04-24 13:35:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100388} ResultSet
2018-04-24 13:35:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100389} Connection
2018-04-24 13:35:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100389} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100390} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100390} Parameters: []
2018-04-24 13:35:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100390} Types: []
2018-04-24 13:35:00,028 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100391} ResultSet
2018-04-24 13:35:00,138 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Preprocess time - 110
2018-04-24 13:35:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Service - 获取异常监控信息
2018-04-24 13:35:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:35:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133500029","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133500"}}
2018-04-24 13:35:00,150 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:35:00,150 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Call time - 11
2018-04-24 13:35:00,150 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100392} Connection
2018-04-24 13:35:00,151 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100392} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100393} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:35:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100393} Parameters: []
2018-04-24 13:35:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100393} Types: []
2018-04-24 13:35:00,154 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100394} ResultSet
2018-04-24 13:35:00,155 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:35:26,198 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:35:53,332 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:36:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:36:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-11]开始执行B2B划款指令状态更新任务...
2018-04-24 13:36:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:36:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100395} Connection
2018-04-24 13:36:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100395} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:36:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:36:00,009 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-15]开始执行异常信息监控扫描任务...
2018-04-24 13:36:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:36:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100397} Connection
2018-04-24 13:36:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100396} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:36:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100397} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:36:00,013 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:36:00,014 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-13]开始执行资金调拨状态更新任务...
2018-04-24 13:36:00,013 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:36:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100396} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:36:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100399} Connection
2018-04-24 13:36:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100398} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:36:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100399} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:36:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100396} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:36:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100400} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:36:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100400} Parameters: [4, 20180325, 20180424]
2018-04-24 13:36:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100398} Parameters: [2018-04-24 13:36:00.01, 2018-04-24 13:36:00.01]
2018-04-24 13:36:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100400} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:36:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100401} ResultSet
2018-04-24 13:36:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100398} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:36:00,028 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100402} ResultSet
2018-04-24 13:36:00,028 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100403} ResultSet
2018-04-24 13:36:00,028 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-11]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:36:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100404} Connection
2018-04-24 13:36:00,029 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-13]资金调拨状态更新任务执行完毕...
2018-04-24 13:36:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:36:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100404} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,030 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:36:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100405} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100405} Parameters: []
2018-04-24 13:36:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100405} Types: []
2018-04-24 13:36:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100406} ResultSet
2018-04-24 13:36:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100407} Connection
2018-04-24 13:36:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100407} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100408} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100408} Parameters: []
2018-04-24 13:36:00,035 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100408} Types: []
2018-04-24 13:36:00,036 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100409} ResultSet
2018-04-24 13:36:00,037 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100410} Connection
2018-04-24 13:36:00,037 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100410} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,037 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100411} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100411} Parameters: []
2018-04-24 13:36:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100411} Types: []
2018-04-24 13:36:00,039 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100412} ResultSet
2018-04-24 13:36:00,040 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-15]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:36:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Preprocess time - 68
2018-04-24 13:36:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Service - 获取异常监控信息
2018-04-24 13:36:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:36:00,108 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133600040","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133600"}}
2018-04-24 13:36:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:36:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Call time - 10
2018-04-24 13:36:00,119 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100413} Connection
2018-04-24 13:36:00,119 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100413} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,119 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100414} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:36:00,119 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100414} Parameters: []
2018-04-24 13:36:00,119 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100414} Types: []
2018-04-24 13:36:00,121 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100415} ResultSet
2018-04-24 13:36:00,122 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:36:23,491 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:36:51,590 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:37:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:37:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:37:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-14]开始执行异常信息监控扫描任务...
2018-04-24 13:37:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100416} Connection
2018-04-24 13:37:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100416} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:37:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100417} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:37:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100417} Parameters: [2018-04-24 13:37:00.004, 2018-04-24 13:37:00.004]
2018-04-24 13:37:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100417} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:37:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100418} ResultSet
2018-04-24 13:37:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100419} Connection
2018-04-24 13:37:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100419} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100420} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100420} Parameters: []
2018-04-24 13:37:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100420} Types: []
2018-04-24 13:37:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100421} ResultSet
2018-04-24 13:37:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100422} Connection
2018-04-24 13:37:00,034 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100422} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100423} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100423} Parameters: []
2018-04-24 13:37:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100423} Types: []
2018-04-24 13:37:00,038 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100424} ResultSet
2018-04-24 13:37:00,038 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100425} Connection
2018-04-24 13:37:00,038 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100425} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100426} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100426} Parameters: []
2018-04-24 13:37:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100426} Types: []
2018-04-24 13:37:00,040 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100427} ResultSet
2018-04-24 13:37:00,086 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Preprocess time - 45
2018-04-24 13:37:00,086 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Service - 获取异常监控信息
2018-04-24 13:37:00,087 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:37:00,087 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133700041","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133700"}}
2018-04-24 13:37:00,099 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:37:00,099 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Call time - 13
2018-04-24 13:37:00,099 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100428} Connection
2018-04-24 13:37:00,099 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100428} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,100 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100429} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:37:00,100 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100429} Parameters: []
2018-04-24 13:37:00,100 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100429} Types: []
2018-04-24 13:37:00,102 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100430} ResultSet
2018-04-24 13:37:00,103 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:37:28,607 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:37:58,116 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:38:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:38:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-1]开始执行异常信息监控扫描任务...
2018-04-24 13:38:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:38:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100431} Connection
2018-04-24 13:38:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100431} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:38:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100432} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:38:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 13:38:00,008 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-4]开始执行线下预存明细指令状态更新任务...
2018-04-24 13:38:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:38:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100432} Parameters: [2018-04-24 13:38:00.003, 2018-04-24 13:38:00.003]
2018-04-24 13:38:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100432} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:38:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100433} Connection
2018-04-24 13:38:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100434} ResultSet
2018-04-24 13:38:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100433} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:38:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100435} Connection
2018-04-24 13:38:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100436} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:38:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100435} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100436} Parameters: [00, 20180423, 20180424]
2018-04-24 13:38:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100437} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100436} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:38:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100437} Parameters: []
2018-04-24 13:38:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100437} Types: []
2018-04-24 13:38:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100438} ResultSet
2018-04-24 13:38:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100439} ResultSet
2018-04-24 13:38:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100440} Connection
2018-04-24 13:38:00,026 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-4]线下预存明细指令状态更新任务执行完毕...
2018-04-24 13:38:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100440} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,027 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:38:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100441} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100441} Parameters: []
2018-04-24 13:38:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100441} Types: []
2018-04-24 13:38:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100442} ResultSet
2018-04-24 13:38:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100443} Connection
2018-04-24 13:38:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100443} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100444} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100444} Parameters: []
2018-04-24 13:38:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100444} Types: []
2018-04-24 13:38:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100445} ResultSet
2018-04-24 13:38:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Preprocess time - 61
2018-04-24 13:38:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Service - 获取异常监控信息
2018-04-24 13:38:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:38:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133800034","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133800"}}
2018-04-24 13:38:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:38:00,105 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Call time - 10
2018-04-24 13:38:00,105 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100446} Connection
2018-04-24 13:38:00,105 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100446} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,106 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100447} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:38:00,106 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100447} Parameters: []
2018-04-24 13:38:00,106 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100447} Types: []
2018-04-24 13:38:00,108 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100448} ResultSet
2018-04-24 13:38:00,109 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:38:27,863 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:38:55,639 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:39:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:39:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 13:39:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-2]开始执行B2B线下出款指令状态更新任务...
2018-04-24 13:39:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:39:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100449} Connection
2018-04-24 13:39:00,007 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:39:00,008 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 13:39:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100449} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:39:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:39:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100450} Connection
2018-04-24 13:39:00,009 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:39:00,012 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-7]开始执行资金调拨状态更新任务...
2018-04-24 13:39:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100450} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:39:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100451} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:39:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100453} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:39:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100452} Connection
2018-04-24 13:39:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100453} Parameters: [2018-04-24 13:39:00.009, 2018-04-24 13:39:00.009]
2018-04-24 13:39:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100451} Parameters: [01, 20180422, 20180424]
2018-04-24 13:39:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100453} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:39:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100452} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:39:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100451} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:39:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100455} ResultSet
2018-04-24 13:39:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100454} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:39:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100457} ResultSet
2018-04-24 13:39:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100456} Connection
2018-04-24 13:39:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100454} Parameters: [4, 20180325, 20180424]
2018-04-24 13:39:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100456} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,028 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-2]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 13:39:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:39:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100458} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100458} Parameters: []
2018-04-24 13:39:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100458} Types: []
2018-04-24 13:39:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100454} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:39:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100459} ResultSet
2018-04-24 13:39:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100460} Connection
2018-04-24 13:39:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100460} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100462} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100462} Parameters: []
2018-04-24 13:39:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100462} Types: []
2018-04-24 13:39:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100461} ResultSet
2018-04-24 13:39:00,034 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100463} ResultSet
2018-04-24 13:39:00,035 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100464} Connection
2018-04-24 13:39:00,035 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100464} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100465} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,036 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-7]资金调拨状态更新任务执行完毕...
2018-04-24 13:39:00,036 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100465} Parameters: []
2018-04-24 13:39:00,037 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100465} Types: []
2018-04-24 13:39:00,038 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100466} ResultSet
2018-04-24 13:39:00,040 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:39:00,106 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 67
2018-04-24 13:39:00,107 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 13:39:00,107 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:39:00,107 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424133900039","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424133900"}}
2018-04-24 13:39:00,117 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:39:00,117 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 10
2018-04-24 13:39:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100467} Connection
2018-04-24 13:39:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100467} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,118 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100468} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:39:00,118 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100468} Parameters: []
2018-04-24 13:39:00,118 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100468} Types: []
2018-04-24 13:39:00,120 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100469} ResultSet
2018-04-24 13:39:00,121 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:39:23,602 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:39:52,147 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:40:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:40:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:40:00,001 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-5]开始执行异常信息监控扫描任务...
2018-04-24 13:40:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100470} Connection
2018-04-24 13:40:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100470} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:40:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100471} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:40:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100471} Parameters: [2018-04-24 13:40:00.002, 2018-04-24 13:40:00.002]
2018-04-24 13:40:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100471} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:40:00,004 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100472} ResultSet
2018-04-24 13:40:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100473} Connection
2018-04-24 13:40:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100473} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100474} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100474} Parameters: []
2018-04-24 13:40:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100474} Types: []
2018-04-24 13:40:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100475} ResultSet
2018-04-24 13:40:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100476} Connection
2018-04-24 13:40:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100476} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100477} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100477} Parameters: []
2018-04-24 13:40:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100477} Types: []
2018-04-24 13:40:00,007 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100478} ResultSet
2018-04-24 13:40:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100479} Connection
2018-04-24 13:40:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100479} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100480} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100480} Parameters: []
2018-04-24 13:40:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100480} Types: []
2018-04-24 13:40:00,009 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100481} ResultSet
2018-04-24 13:40:00,009 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-5]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:40:00,079 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Preprocess time - 70
2018-04-24 13:40:00,079 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Service - 获取异常监控信息
2018-04-24 13:40:00,079 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:40:00,080 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134000009","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134000"}}
2018-04-24 13:40:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:40:00,090 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-5]Call time - 11
2018-04-24 13:40:00,091 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100482} Connection
2018-04-24 13:40:00,091 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100482} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,091 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100483} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:40:00,091 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100483} Parameters: []
2018-04-24 13:40:00,091 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100483} Types: []
2018-04-24 13:40:00,094 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100484} ResultSet
2018-04-24 13:40:00,095 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:40:26,261 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:40:50,718 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:41:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:41:00,004 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:41:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-9]开始执行异常信息监控扫描任务...
2018-04-24 13:41:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100485} Connection
2018-04-24 13:41:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100485} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:41:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100486} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:41:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100486} Parameters: [2018-04-24 13:41:00.005, 2018-04-24 13:41:00.005]
2018-04-24 13:41:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100486} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:41:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100487} ResultSet
2018-04-24 13:41:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100488} Connection
2018-04-24 13:41:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100488} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100489} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100489} Parameters: []
2018-04-24 13:41:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100489} Types: []
2018-04-24 13:41:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100490} ResultSet
2018-04-24 13:41:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100491} Connection
2018-04-24 13:41:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100491} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100492} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100492} Parameters: []
2018-04-24 13:41:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100492} Types: []
2018-04-24 13:41:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100493} ResultSet
2018-04-24 13:41:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100494} Connection
2018-04-24 13:41:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100494} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100495} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100495} Parameters: []
2018-04-24 13:41:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100495} Types: []
2018-04-24 13:41:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100496} ResultSet
2018-04-24 13:41:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Preprocess time - 74
2018-04-24 13:41:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Service - 获取异常监控信息
2018-04-24 13:41:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:41:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134100027","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134100"}}
2018-04-24 13:41:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:41:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Call time - 15
2018-04-24 13:41:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100497} Connection
2018-04-24 13:41:00,117 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100497} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,118 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100498} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:41:00,119 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100498} Parameters: []
2018-04-24 13:41:00,119 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100498} Types: []
2018-04-24 13:41:00,121 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100499} ResultSet
2018-04-24 13:41:00,122 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:41:27,094 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:41:50,273 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:42:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.ProcessB2BRefundCmdJob
2018-04-24 13:42:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:42:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-6]开始执行B2B退款指令任务...
2018-04-24 13:42:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100500} Connection
2018-04-24 13:42:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:42:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:42:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-8]开始执行异常信息监控扫描任务...
2018-04-24 13:42:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100500} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:42:00,007 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:42:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100501} Connection
2018-04-24 13:42:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100501} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:42:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100502} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:42:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:42:00,013 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-10]开始执行资金调拨状态更新任务...
2018-04-24 13:42:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100502} Parameters: [1316, 20180423, 20180424]
2018-04-24 13:42:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100502} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:42:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100503} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:42:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100504} Connection
2018-04-24 13:42:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100503} Parameters: [2018-04-24 13:42:00.007, 2018-04-24 13:42:00.007]
2018-04-24 13:42:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100504} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:42:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100503} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:42:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100505} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:42:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100506} ResultSet
2018-04-24 13:42:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100505} Parameters: [4, 20180325, 20180424]
2018-04-24 13:42:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100507} ResultSet
2018-04-24 13:42:00,023 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-6]B2B退款指令任务执行完毕...
2018-04-24 13:42:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100505} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:42:00,024 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:42:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100508} Connection
2018-04-24 13:42:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100508} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100509} ResultSet
2018-04-24 13:42:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100510} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100510} Parameters: []
2018-04-24 13:42:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100510} Types: []
2018-04-24 13:42:00,028 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-10]资金调拨状态更新任务执行完毕...
2018-04-24 13:42:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:42:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100511} ResultSet
2018-04-24 13:42:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100512} Connection
2018-04-24 13:42:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100512} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100513} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100513} Parameters: []
2018-04-24 13:42:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100513} Types: []
2018-04-24 13:42:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100514} ResultSet
2018-04-24 13:42:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100515} Connection
2018-04-24 13:42:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100515} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100516} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100516} Parameters: []
2018-04-24 13:42:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100516} Types: []
2018-04-24 13:42:00,035 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100517} ResultSet
2018-04-24 13:42:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Preprocess time - 80
2018-04-24 13:42:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Service - 获取异常监控信息
2018-04-24 13:42:00,117 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:42:00,117 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134200036","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134200"}}
2018-04-24 13:42:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:42:00,127 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Call time - 10
2018-04-24 13:42:00,127 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100518} Connection
2018-04-24 13:42:00,127 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100518} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,128 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100519} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:42:00,128 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100519} Parameters: []
2018-04-24 13:42:00,128 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100519} Types: []
2018-04-24 13:42:00,130 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100520} ResultSet
2018-04-24 13:42:00,131 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:42:29,239 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:42:54,308 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:43:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:43:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:43:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-12]开始执行异常信息监控扫描任务...
2018-04-24 13:43:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100521} Connection
2018-04-24 13:43:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100521} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:43:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100522} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:43:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100522} Parameters: [2018-04-24 13:43:00.004, 2018-04-24 13:43:00.004]
2018-04-24 13:43:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100522} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:43:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100523} ResultSet
2018-04-24 13:43:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100524} Connection
2018-04-24 13:43:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100524} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100525} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100525} Parameters: []
2018-04-24 13:43:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100525} Types: []
2018-04-24 13:43:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100526} ResultSet
2018-04-24 13:43:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100527} Connection
2018-04-24 13:43:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100527} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100528} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100528} Parameters: []
2018-04-24 13:43:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100528} Types: []
2018-04-24 13:43:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100529} ResultSet
2018-04-24 13:43:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100530} Connection
2018-04-24 13:43:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100530} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100531} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100531} Parameters: []
2018-04-24 13:43:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100531} Types: []
2018-04-24 13:43:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100532} ResultSet
2018-04-24 13:43:00,027 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-12]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:43:00,174 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Preprocess time - 146
2018-04-24 13:43:00,175 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Service - 获取异常监控信息
2018-04-24 13:43:00,175 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:43:00,175 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134300028","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134300"}}
2018-04-24 13:43:00,187 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:43:00,188 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Call time - 13
2018-04-24 13:43:00,189 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100533} Connection
2018-04-24 13:43:00,189 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100533} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,190 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100534} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:43:00,190 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100534} Parameters: []
2018-04-24 13:43:00,190 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100534} Types: []
2018-04-24 13:43:00,193 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100535} ResultSet
2018-04-24 13:43:00,194 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:43:24,785 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:43:50,277 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:44:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 13:44:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-11]开始执行B2C退款指令任务...
2018-04-24 13:44:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:44:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100536} Connection
2018-04-24 13:44:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:44:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:44:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-13]开始执行异常信息监控扫描任务...
2018-04-24 13:44:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100536} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:44:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100537} Connection
2018-04-24 13:44:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100538} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:44:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100537} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:44:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100538} Parameters: [3303, 20180423, 20180424]
2018-04-24 13:44:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100538} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:44:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100539} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:44:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100539} Parameters: [2018-04-24 13:44:00.007, 2018-04-24 13:44:00.007]
2018-04-24 13:44:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100540} ResultSet
2018-04-24 13:44:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100539} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:44:00,017 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-11]B2C退款指令任务执行完毕...
2018-04-24 13:44:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100541} ResultSet
2018-04-24 13:44:00,018 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:44:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100542} Connection
2018-04-24 13:44:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100542} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100543} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100543} Parameters: []
2018-04-24 13:44:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100543} Types: []
2018-04-24 13:44:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100544} ResultSet
2018-04-24 13:44:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100545} Connection
2018-04-24 13:44:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100545} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100546} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100546} Parameters: []
2018-04-24 13:44:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100546} Types: []
2018-04-24 13:44:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100547} ResultSet
2018-04-24 13:44:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100548} Connection
2018-04-24 13:44:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100548} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100549} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100549} Parameters: []
2018-04-24 13:44:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100549} Types: []
2018-04-24 13:44:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100550} ResultSet
2018-04-24 13:44:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Preprocess time - 82
2018-04-24 13:44:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Service - 获取异常监控信息
2018-04-24 13:44:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:44:00,116 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134400033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134400"}}
2018-04-24 13:44:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:44:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Call time - 10
2018-04-24 13:44:00,126 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100551} Connection
2018-04-24 13:44:00,127 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100551} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,127 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100552} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:44:00,127 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100552} Parameters: []
2018-04-24 13:44:00,127 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100552} Types: []
2018-04-24 13:44:00,129 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100553} ResultSet
2018-04-24 13:44:00,130 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:44:26,324 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:44:51,454 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:45:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:45:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-15]开始执行异常信息监控扫描任务...
2018-04-24 13:45:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:45:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100554} Connection
2018-04-24 13:45:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100554} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:45:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100555} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:45:00,004 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:45:00,005 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-14]开始执行资金调拨状态更新任务...
2018-04-24 13:45:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:45:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100555} Parameters: [2018-04-24 13:45:00.003, 2018-04-24 13:45:00.003]
2018-04-24 13:45:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100555} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:45:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100556} Connection
2018-04-24 13:45:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100556} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:45:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100557} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:45:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100557} Parameters: [4, 20180325, 20180424]
2018-04-24 13:45:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100557} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:45:00,008 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100558} ResultSet
2018-04-24 13:45:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100559} Connection
2018-04-24 13:45:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100560} ResultSet
2018-04-24 13:45:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100559} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100561} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100561} Parameters: []
2018-04-24 13:45:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100561} Types: []
2018-04-24 13:45:00,011 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-14]资金调拨状态更新任务执行完毕...
2018-04-24 13:45:00,012 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:45:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100562} ResultSet
2018-04-24 13:45:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100563} Connection
2018-04-24 13:45:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100563} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100564} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100564} Parameters: []
2018-04-24 13:45:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100564} Types: []
2018-04-24 13:45:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100565} ResultSet
2018-04-24 13:45:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100566} Connection
2018-04-24 13:45:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100566} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100567} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100567} Parameters: []
2018-04-24 13:45:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100567} Types: []
2018-04-24 13:45:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100568} ResultSet
2018-04-24 13:45:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Preprocess time - 62
2018-04-24 13:45:00,082 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Service - 获取异常监控信息
2018-04-24 13:45:00,082 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:45:00,082 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134500019","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134500"}}
2018-04-24 13:45:00,092 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:45:00,092 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-15]Call time - 10
2018-04-24 13:45:00,092 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100569} Connection
2018-04-24 13:45:00,093 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100569} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,093 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100570} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:45:00,093 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100570} Parameters: []
2018-04-24 13:45:00,093 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100570} Types: []
2018-04-24 13:45:00,095 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100571} ResultSet
2018-04-24 13:45:00,096 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:45:28,506 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:45:53,285 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:46:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:46:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-4]开始执行B2B划款指令状态更新任务...
2018-04-24 13:46:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:46:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100572} Connection
2018-04-24 13:46:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:46:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:46:00,007 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-1]开始执行异常信息监控扫描任务...
2018-04-24 13:46:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100572} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:46:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100573} Connection
2018-04-24 13:46:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100574} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:46:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100573} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:46:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100574} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:46:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100575} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:46:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100574} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:46:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100575} Parameters: [2018-04-24 13:46:00.008, 2018-04-24 13:46:00.008]
2018-04-24 13:46:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100575} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:46:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100576} ResultSet
2018-04-24 13:46:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100577} ResultSet
2018-04-24 13:46:00,019 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-4]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:46:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100578} Connection
2018-04-24 13:46:00,020 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:46:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100578} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100579} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100579} Parameters: []
2018-04-24 13:46:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100579} Types: []
2018-04-24 13:46:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100580} ResultSet
2018-04-24 13:46:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100581} Connection
2018-04-24 13:46:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100581} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100582} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100582} Parameters: []
2018-04-24 13:46:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100582} Types: []
2018-04-24 13:46:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100583} ResultSet
2018-04-24 13:46:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100584} Connection
2018-04-24 13:46:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100584} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100585} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100585} Parameters: []
2018-04-24 13:46:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100585} Types: []
2018-04-24 13:46:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100586} ResultSet
2018-04-24 13:46:00,033 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-1]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:46:00,160 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Preprocess time - 126
2018-04-24 13:46:00,160 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Service - 获取异常监控信息
2018-04-24 13:46:00,160 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:46:00,160 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134600034","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134600"}}
2018-04-24 13:46:00,171 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:46:00,171 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Call time - 11
2018-04-24 13:46:00,171 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100587} Connection
2018-04-24 13:46:00,172 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100587} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,172 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100588} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:46:00,172 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100588} Parameters: []
2018-04-24 13:46:00,173 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100588} Types: []
2018-04-24 13:46:00,175 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100589} ResultSet
2018-04-24 13:46:00,177 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:46:29,315 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:46:55,437 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:47:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:47:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:47:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 13:47:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100590} Connection
2018-04-24 13:47:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100590} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:47:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100591} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:47:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100591} Parameters: [2018-04-24 13:47:00.005, 2018-04-24 13:47:00.005]
2018-04-24 13:47:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100591} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:47:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100592} ResultSet
2018-04-24 13:47:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100593} Connection
2018-04-24 13:47:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100593} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100594} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100594} Parameters: []
2018-04-24 13:47:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100594} Types: []
2018-04-24 13:47:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100595} ResultSet
2018-04-24 13:47:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100596} Connection
2018-04-24 13:47:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100596} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100597} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100597} Parameters: []
2018-04-24 13:47:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100597} Types: []
2018-04-24 13:47:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100598} ResultSet
2018-04-24 13:47:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100599} Connection
2018-04-24 13:47:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100599} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100600} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100600} Parameters: []
2018-04-24 13:47:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100600} Types: []
2018-04-24 13:47:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100601} ResultSet
2018-04-24 13:47:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 100
2018-04-24 13:47:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 13:47:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:47:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134700028","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134700"}}
2018-04-24 13:47:00,138 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:47:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 10
2018-04-24 13:47:00,139 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100602} Connection
2018-04-24 13:47:00,139 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100602} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100603} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:47:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100603} Parameters: []
2018-04-24 13:47:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100603} Types: []
2018-04-24 13:47:00,142 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100604} ResultSet
2018-04-24 13:47:00,143 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:47:29,998 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:47:59,241 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:48:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:48:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:48:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-7]开始执行异常信息监控扫描任务...
2018-04-24 13:48:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100605} Connection
2018-04-24 13:48:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100605} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:48:00,007 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:48:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 13:48:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100606} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:48:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100606} Parameters: [2018-04-24 13:48:00.005, 2018-04-24 13:48:00.005]
2018-04-24 13:48:00,010 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-3]开始执行线下预存明细指令状态更新任务...
2018-04-24 13:48:00,012 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:48:00,012 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:48:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100606} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:48:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100607} Connection
2018-04-24 13:48:00,014 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-5]开始执行资金调拨状态更新任务...
2018-04-24 13:48:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100608} ResultSet
2018-04-24 13:48:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100609} Connection
2018-04-24 13:48:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100607} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:48:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100609} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:48:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100610} Connection
2018-04-24 13:48:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100612} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:48:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100611} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:48:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100612} Parameters: [4, 20180325, 20180424]
2018-04-24 13:48:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100610} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100612} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:48:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100611} Parameters: [00, 20180423, 20180424]
2018-04-24 13:48:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100611} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:48:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100613} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100613} Parameters: []
2018-04-24 13:48:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100613} Types: []
2018-04-24 13:48:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100614} ResultSet
2018-04-24 13:48:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100615} ResultSet
2018-04-24 13:48:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100616} Connection
2018-04-24 13:48:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100616} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100617} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100618} ResultSet
2018-04-24 13:48:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100617} Parameters: []
2018-04-24 13:48:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100617} Types: []
2018-04-24 13:48:00,031 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-5]资金调拨状态更新任务执行完毕...
2018-04-24 13:48:00,032 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-3]线下预存明细指令状态更新任务执行完毕...
2018-04-24 13:48:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100619} ResultSet
2018-04-24 13:48:00,033 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:48:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100620} Connection
2018-04-24 13:48:00,033 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100620} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100621} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100621} Parameters: []
2018-04-24 13:48:00,034 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100621} Types: []
2018-04-24 13:48:00,035 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100622} ResultSet
2018-04-24 13:48:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Preprocess time - 46
2018-04-24 13:48:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Service - 获取异常监控信息
2018-04-24 13:48:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:48:00,081 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134800035","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134800"}}
2018-04-24 13:48:00,092 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:48:00,093 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Call time - 11
2018-04-24 13:48:00,093 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100623} Connection
2018-04-24 13:48:00,093 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100623} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,093 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100624} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:48:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100624} Parameters: []
2018-04-24 13:48:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100624} Types: []
2018-04-24 13:48:00,096 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100625} ResultSet
2018-04-24 13:48:00,097 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:48:24,335 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:48:52,263 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:49:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 13:49:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-9]开始执行B2B线下出款指令状态更新任务...
2018-04-24 13:49:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:49:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100626} Connection
2018-04-24 13:49:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:49:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:49:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-6]开始执行异常信息监控扫描任务...
2018-04-24 13:49:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100626} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:49:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100627} Connection
2018-04-24 13:49:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100628} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:49:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100628} Parameters: [01, 20180422, 20180424]
2018-04-24 13:49:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100627} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:49:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100628} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:49:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100629} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:49:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100629} Parameters: [2018-04-24 13:49:00.007, 2018-04-24 13:49:00.007]
2018-04-24 13:49:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100629} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:49:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100630} ResultSet
2018-04-24 13:49:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100631} ResultSet
2018-04-24 13:49:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100632} Connection
2018-04-24 13:49:00,019 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-9]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 13:49:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100632} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,020 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:49:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100633} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100633} Parameters: []
2018-04-24 13:49:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100633} Types: []
2018-04-24 13:49:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100634} ResultSet
2018-04-24 13:49:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100635} Connection
2018-04-24 13:49:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100635} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100636} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100636} Parameters: []
2018-04-24 13:49:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100636} Types: []
2018-04-24 13:49:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100637} ResultSet
2018-04-24 13:49:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100638} Connection
2018-04-24 13:49:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100638} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100639} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100639} Parameters: []
2018-04-24 13:49:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100639} Types: []
2018-04-24 13:49:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100640} ResultSet
2018-04-24 13:49:00,162 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Preprocess time - 129
2018-04-24 13:49:00,162 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Service - 获取异常监控信息
2018-04-24 13:49:00,163 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:49:00,163 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424134900033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424134900"}}
2018-04-24 13:49:00,175 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:49:00,176 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Call time - 13
2018-04-24 13:49:00,176 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100641} Connection
2018-04-24 13:49:00,177 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100641} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,177 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100642} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:49:00,178 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100642} Parameters: []
2018-04-24 13:49:00,178 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100642} Types: []
2018-04-24 13:49:00,181 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100643} ResultSet
2018-04-24 13:49:00,182 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:49:29,993 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:49:53,294 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:50:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:50:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:50:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-10]开始执行异常信息监控扫描任务...
2018-04-24 13:50:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100644} Connection
2018-04-24 13:50:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100644} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:50:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100645} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:50:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100645} Parameters: [2018-04-24 13:50:00.005, 2018-04-24 13:50:00.005]
2018-04-24 13:50:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100645} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:50:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100646} ResultSet
2018-04-24 13:50:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100647} Connection
2018-04-24 13:50:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100647} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100648} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100648} Parameters: []
2018-04-24 13:50:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100648} Types: []
2018-04-24 13:50:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100649} ResultSet
2018-04-24 13:50:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100650} Connection
2018-04-24 13:50:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100650} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100651} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100651} Parameters: []
2018-04-24 13:50:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100651} Types: []
2018-04-24 13:50:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100652} ResultSet
2018-04-24 13:50:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100653} Connection
2018-04-24 13:50:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100653} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100654} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100654} Parameters: []
2018-04-24 13:50:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100654} Types: []
2018-04-24 13:50:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100655} ResultSet
2018-04-24 13:50:00,027 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-10]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:50:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Preprocess time - 75
2018-04-24 13:50:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Service - 获取异常监控信息
2018-04-24 13:50:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:50:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135000028","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135000"}}
2018-04-24 13:50:00,114 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:50:00,114 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Call time - 11
2018-04-24 13:50:00,114 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100656} Connection
2018-04-24 13:50:00,114 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100656} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100657} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:50:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100657} Parameters: []
2018-04-24 13:50:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100657} Types: []
2018-04-24 13:50:00,117 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100658} ResultSet
2018-04-24 13:50:00,118 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:50:26,531 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:50:50,501 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:51:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:51:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-8]开始执行异常信息监控扫描任务...
2018-04-24 13:51:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:51:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100659} Connection
2018-04-24 13:51:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100659} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:51:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:51:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:51:00,007 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-12]开始执行资金调拨状态更新任务...
2018-04-24 13:51:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100660} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:51:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100660} Parameters: [2018-04-24 13:51:00.003, 2018-04-24 13:51:00.003]
2018-04-24 13:51:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100661} Connection
2018-04-24 13:51:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100661} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:51:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100660} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:51:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100662} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:51:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100663} ResultSet
2018-04-24 13:51:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100664} Connection
2018-04-24 13:51:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100664} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100665} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100665} Parameters: []
2018-04-24 13:51:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100665} Types: []
2018-04-24 13:51:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100662} Parameters: [4, 20180325, 20180424]
2018-04-24 13:51:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100666} ResultSet
2018-04-24 13:51:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100662} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:51:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100667} Connection
2018-04-24 13:51:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100667} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100668} ResultSet
2018-04-24 13:51:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100669} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100669} Parameters: []
2018-04-24 13:51:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100669} Types: []
2018-04-24 13:51:00,028 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-12]资金调拨状态更新任务执行完毕...
2018-04-24 13:51:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:51:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100670} ResultSet
2018-04-24 13:51:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100671} Connection
2018-04-24 13:51:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100671} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100672} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100672} Parameters: []
2018-04-24 13:51:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100672} Types: []
2018-04-24 13:51:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100673} ResultSet
2018-04-24 13:51:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Preprocess time - 76
2018-04-24 13:51:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Service - 获取异常监控信息
2018-04-24 13:51:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:51:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135100033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135100"}}
2018-04-24 13:51:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:51:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Call time - 10
2018-04-24 13:51:00,119 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100674} Connection
2018-04-24 13:51:00,120 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100674} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,120 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100675} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:51:00,120 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100675} Parameters: []
2018-04-24 13:51:00,120 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100675} Types: []
2018-04-24 13:51:00,122 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100676} ResultSet
2018-04-24 13:51:00,123 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:51:24,670 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:51:54,521 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:52:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.ProcessB2BRefundCmdJob
2018-04-24 13:52:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-11]开始执行B2B退款指令任务...
2018-04-24 13:52:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:52:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100677} Connection
2018-04-24 13:52:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:52:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:52:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-13]开始执行异常信息监控扫描任务...
2018-04-24 13:52:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100677} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:52:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100678} Connection
2018-04-24 13:52:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100679} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:52:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100679} Parameters: [1316, 20180423, 20180424]
2018-04-24 13:52:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100679} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:52:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100678} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:52:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100680} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:52:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100680} Parameters: [2018-04-24 13:52:00.003, 2018-04-24 13:52:00.003]
2018-04-24 13:52:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100680} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:52:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100681} ResultSet
2018-04-24 13:52:00,007 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100682} ResultSet
2018-04-24 13:52:00,008 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-11]B2B退款指令任务执行完毕...
2018-04-24 13:52:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100683} Connection
2018-04-24 13:52:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:52:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100683} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100684} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100684} Parameters: []
2018-04-24 13:52:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100684} Types: []
2018-04-24 13:52:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100685} ResultSet
2018-04-24 13:52:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100686} Connection
2018-04-24 13:52:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100686} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100687} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100687} Parameters: []
2018-04-24 13:52:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100687} Types: []
2018-04-24 13:52:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100688} ResultSet
2018-04-24 13:52:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100689} Connection
2018-04-24 13:52:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100689} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100690} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100690} Parameters: []
2018-04-24 13:52:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100690} Types: []
2018-04-24 13:52:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100691} ResultSet
2018-04-24 13:52:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Preprocess time - 89
2018-04-24 13:52:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Service - 获取异常监控信息
2018-04-24 13:52:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:52:00,104 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135200015","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135200"}}
2018-04-24 13:52:00,114 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:52:00,114 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-13]Call time - 10
2018-04-24 13:52:00,115 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100692} Connection
2018-04-24 13:52:00,115 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100692} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100693} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:52:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100693} Parameters: []
2018-04-24 13:52:00,115 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100693} Types: []
2018-04-24 13:52:00,117 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100694} ResultSet
2018-04-24 13:52:00,118 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:52:28,239 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:52:55,959 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:53:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:53:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:53:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-14]开始执行异常信息监控扫描任务...
2018-04-24 13:53:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100695} Connection
2018-04-24 13:53:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100695} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:53:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100696} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:53:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100696} Parameters: [2018-04-24 13:53:00.003, 2018-04-24 13:53:00.003]
2018-04-24 13:53:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100696} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:53:00,007 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100697} ResultSet
2018-04-24 13:53:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100698} Connection
2018-04-24 13:53:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100698} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100699} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100699} Parameters: []
2018-04-24 13:53:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100699} Types: []
2018-04-24 13:53:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100700} ResultSet
2018-04-24 13:53:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100701} Connection
2018-04-24 13:53:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100701} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100702} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100702} Parameters: []
2018-04-24 13:53:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100702} Types: []
2018-04-24 13:53:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100703} ResultSet
2018-04-24 13:53:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100704} Connection
2018-04-24 13:53:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100704} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100705} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100705} Parameters: []
2018-04-24 13:53:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100705} Types: []
2018-04-24 13:53:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100706} ResultSet
2018-04-24 13:53:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Preprocess time - 106
2018-04-24 13:53:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Service - 获取异常监控信息
2018-04-24 13:53:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:53:00,128 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135300022","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135300"}}
2018-04-24 13:53:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:53:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Call time - 11
2018-04-24 13:53:00,139 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100707} Connection
2018-04-24 13:53:00,140 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100707} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100708} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:53:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100708} Parameters: []
2018-04-24 13:53:00,140 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100708} Types: []
2018-04-24 13:53:00,142 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100709} ResultSet
2018-04-24 13:53:00,144 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:53:24,611 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:53:50,575 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:54:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 13:54:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-15]开始执行B2C退款指令任务...
2018-04-24 13:54:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:54:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100710} Connection
2018-04-24 13:54:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:54:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-4]开始执行异常信息监控扫描任务...
2018-04-24 13:54:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:54:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100710} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:54:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100711} Connection
2018-04-24 13:54:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100712} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 13:54:00,009 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:54:00,009 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-1]开始执行资金调拨状态更新任务...
2018-04-24 13:54:00,009 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:54:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100711} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:54:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100713} Connection
2018-04-24 13:54:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100712} Parameters: [3303, 20180423, 20180424]
2018-04-24 13:54:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100713} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:54:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100714} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:54:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100715} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:54:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100712} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:54:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100715} Parameters: [4, 20180325, 20180424]
2018-04-24 13:54:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100714} Parameters: [2018-04-24 13:54:00.006, 2018-04-24 13:54:00.006]
2018-04-24 13:54:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100715} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:54:00,017 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100716} ResultSet
2018-04-24 13:54:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100714} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:54:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100717} ResultSet
2018-04-24 13:54:00,019 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-15]B2C退款指令任务执行完毕...
2018-04-24 13:54:00,019 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:54:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100718} ResultSet
2018-04-24 13:54:00,020 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-1]资金调拨状态更新任务执行完毕...
2018-04-24 13:54:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100719} Connection
2018-04-24 13:54:00,021 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:54:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100719} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100720} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100720} Parameters: []
2018-04-24 13:54:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100720} Types: []
2018-04-24 13:54:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100721} ResultSet
2018-04-24 13:54:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100722} Connection
2018-04-24 13:54:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100722} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100723} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100723} Parameters: []
2018-04-24 13:54:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100723} Types: []
2018-04-24 13:54:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100724} ResultSet
2018-04-24 13:54:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100725} Connection
2018-04-24 13:54:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100725} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100726} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100726} Parameters: []
2018-04-24 13:54:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100726} Types: []
2018-04-24 13:54:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100727} ResultSet
2018-04-24 13:54:00,030 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-4]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:54:00,102 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Preprocess time - 72
2018-04-24 13:54:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Service - 获取异常监控信息
2018-04-24 13:54:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:54:00,103 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135400030","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135400"}}
2018-04-24 13:54:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:54:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Call time - 10
2018-04-24 13:54:00,113 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100728} Connection
2018-04-24 13:54:00,114 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100728} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100729} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:54:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100729} Parameters: []
2018-04-24 13:54:00,114 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100729} Types: []
2018-04-24 13:54:00,116 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100730} ResultSet
2018-04-24 13:54:00,117 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:54:30,070 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:55:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:55:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:55:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 13:55:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100731} Connection
2018-04-24 13:55:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100731} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:55:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100732} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:55:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100732} Parameters: [2018-04-24 13:55:00.005, 2018-04-24 13:55:00.005]
2018-04-24 13:55:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100732} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:55:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100733} ResultSet
2018-04-24 13:55:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100734} Connection
2018-04-24 13:55:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100734} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100735} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100735} Parameters: []
2018-04-24 13:55:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100735} Types: []
2018-04-24 13:55:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100736} ResultSet
2018-04-24 13:55:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100737} Connection
2018-04-24 13:55:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100737} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100738} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100738} Parameters: []
2018-04-24 13:55:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100738} Types: []
2018-04-24 13:55:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100739} ResultSet
2018-04-24 13:55:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100740} Connection
2018-04-24 13:55:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100740} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100741} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100741} Parameters: []
2018-04-24 13:55:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100741} Types: []
2018-04-24 13:55:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100742} ResultSet
2018-04-24 13:55:00,162 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 134
2018-04-24 13:55:00,163 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 13:55:00,163 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:55:00,163 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135500029","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135500"}}
2018-04-24 13:55:00,172 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:55:00,173 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 9
2018-04-24 13:55:00,173 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100743} Connection
2018-04-24 13:55:00,173 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100743} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,173 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100744} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:55:00,174 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100744} Parameters: []
2018-04-24 13:55:00,174 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100744} Types: []
2018-04-24 13:55:00,176 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100745} ResultSet
2018-04-24 13:55:00,177 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:55:26,914 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:55:54,730 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:56:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 13:56:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:56:00,005 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-5]开始执行B2B划款指令状态更新任务...
2018-04-24 13:56:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:56:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:56:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 13:56:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100746} Connection
2018-04-24 13:56:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100747} Connection
2018-04-24 13:56:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100746} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:56:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100747} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:56:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100748} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 13:56:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100749} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:56:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100748} Parameters: [QS, 20180325, 20180424]
2018-04-24 13:56:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100749} Parameters: [2018-04-24 13:56:00.007, 2018-04-24 13:56:00.007]
2018-04-24 13:56:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100748} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:56:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100749} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:56:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100750} ResultSet
2018-04-24 13:56:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100751} ResultSet
2018-04-24 13:56:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100752} Connection
2018-04-24 13:56:00,021 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-5]B2B划款指令状态更新任务执行完毕...
2018-04-24 13:56:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100752} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100753} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,022 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:56:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100753} Parameters: []
2018-04-24 13:56:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100753} Types: []
2018-04-24 13:56:00,028 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100754} ResultSet
2018-04-24 13:56:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100755} Connection
2018-04-24 13:56:00,029 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100755} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100756} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100756} Parameters: []
2018-04-24 13:56:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100756} Types: []
2018-04-24 13:56:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100757} ResultSet
2018-04-24 13:56:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100758} Connection
2018-04-24 13:56:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100758} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100759} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100759} Parameters: []
2018-04-24 13:56:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100759} Types: []
2018-04-24 13:56:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100760} ResultSet
2018-04-24 13:56:00,118 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 84
2018-04-24 13:56:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 13:56:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:56:00,119 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135600034","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135600"}}
2018-04-24 13:56:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:56:00,129 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 10
2018-04-24 13:56:00,130 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100761} Connection
2018-04-24 13:56:00,130 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100761} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100762} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:56:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100762} Parameters: []
2018-04-24 13:56:00,130 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100762} Types: []
2018-04-24 13:56:00,133 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100763} ResultSet
2018-04-24 13:56:00,134 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:56:24,378 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:56:47,640 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:57:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:57:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-7]开始执行异常信息监控扫描任务...
2018-04-24 13:57:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:57:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100764} Connection
2018-04-24 13:57:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100764} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:57:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100765} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:57:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 13:57:00,007 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-9]开始执行资金调拨状态更新任务...
2018-04-24 13:57:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:57:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100765} Parameters: [2018-04-24 13:57:00.004, 2018-04-24 13:57:00.004]
2018-04-24 13:57:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100766} Connection
2018-04-24 13:57:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100765} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:57:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100766} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:57:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100767} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:57:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100767} Parameters: [4, 20180325, 20180424]
2018-04-24 13:57:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100767} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:57:00,012 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100768} ResultSet
2018-04-24 13:57:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100769} ResultSet
2018-04-24 13:57:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100770} Connection
2018-04-24 13:57:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100770} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,016 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-9]资金调拨状态更新任务执行完毕...
2018-04-24 13:57:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100771} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100771} Parameters: []
2018-04-24 13:57:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100771} Types: []
2018-04-24 13:57:00,017 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:57:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100772} ResultSet
2018-04-24 13:57:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100773} Connection
2018-04-24 13:57:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100773} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100774} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100774} Parameters: []
2018-04-24 13:57:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100774} Types: []
2018-04-24 13:57:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100775} ResultSet
2018-04-24 13:57:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100776} Connection
2018-04-24 13:57:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100776} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100777} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100777} Parameters: []
2018-04-24 13:57:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100777} Types: []
2018-04-24 13:57:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100778} ResultSet
2018-04-24 13:57:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Preprocess time - 56
2018-04-24 13:57:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Service - 获取异常监控信息
2018-04-24 13:57:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:57:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135700028","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135700"}}
2018-04-24 13:57:00,093 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:57:00,093 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-7]Call time - 10
2018-04-24 13:57:00,093 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100779} Connection
2018-04-24 13:57:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100779} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100780} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:57:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100780} Parameters: []
2018-04-24 13:57:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100780} Types: []
2018-04-24 13:57:00,096 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100781} ResultSet
2018-04-24 13:57:00,097 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:57:23,149 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:57:47,495 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:58:00,000 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:58:00,001 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-6]开始执行异常信息监控扫描任务...
2018-04-24 13:58:00,000 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:58:00,001 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100782} Connection
2018-04-24 13:58:00,001 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100782} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:58:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 13:58:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:58:00,002 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100783} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:58:00,002 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-10]开始执行线下预存明细指令状态更新任务...
2018-04-24 13:58:00,003 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100783} Parameters: [2018-04-24 13:58:00.001, 2018-04-24 13:58:00.001]
2018-04-24 13:58:00,003 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100783} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:58:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100784} Connection
2018-04-24 13:58:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100784} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:58:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100785} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 13:58:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100785} Parameters: [00, 20180423, 20180424]
2018-04-24 13:58:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100785} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:58:00,004 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100786} ResultSet
2018-04-24 13:58:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100787} Connection
2018-04-24 13:58:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100787} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100788} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100788} Parameters: []
2018-04-24 13:58:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100788} Types: []
2018-04-24 13:58:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100789} ResultSet
2018-04-24 13:58:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100790} ResultSet
2018-04-24 13:58:00,006 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-10]线下预存明细指令状态更新任务执行完毕...
2018-04-24 13:58:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100791} Connection
2018-04-24 13:58:00,007 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:58:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100791} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100792} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100792} Parameters: []
2018-04-24 13:58:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100792} Types: []
2018-04-24 13:58:00,008 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100793} ResultSet
2018-04-24 13:58:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100794} Connection
2018-04-24 13:58:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100794} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100795} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100795} Parameters: []
2018-04-24 13:58:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100795} Types: []
2018-04-24 13:58:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100796} ResultSet
2018-04-24 13:58:00,010 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-6]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 13:58:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Preprocess time - 73
2018-04-24 13:58:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Service - 获取异常监控信息
2018-04-24 13:58:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:58:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135800010","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135800"}}
2018-04-24 13:58:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:58:00,094 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-6]Call time - 11
2018-04-24 13:58:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100797} Connection
2018-04-24 13:58:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100797} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100798} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:58:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100798} Parameters: []
2018-04-24 13:58:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100798} Types: []
2018-04-24 13:58:00,097 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100799} ResultSet
2018-04-24 13:58:00,098 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:58:25,021 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:58:48,820 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:59:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 13:59:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-12]开始执行B2B线下出款指令状态更新任务...
2018-04-24 13:59:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 13:59:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100800} Connection
2018-04-24 13:59:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100800} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:59:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 13:59:00,007 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:59:00,009 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-8]开始执行异常信息监控扫描任务...
2018-04-24 13:59:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100801} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 13:59:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100802} Connection
2018-04-24 13:59:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100801} Parameters: [01, 20180422, 20180424]
2018-04-24 13:59:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100802} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:59:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100801} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 13:59:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100803} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 13:59:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100803} Parameters: [2018-04-24 13:59:00.011, 2018-04-24 13:59:00.011]
2018-04-24 13:59:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100803} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 13:59:00,021 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100804} ResultSet
2018-04-24 13:59:00,022 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100805} ResultSet
2018-04-24 13:59:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100806} Connection
2018-04-24 13:59:00,025 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-12]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 13:59:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100806} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,026 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:59:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100807} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100807} Parameters: []
2018-04-24 13:59:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100807} Types: []
2018-04-24 13:59:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100808} ResultSet
2018-04-24 13:59:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100809} Connection
2018-04-24 13:59:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100809} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100810} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100810} Parameters: []
2018-04-24 13:59:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100810} Types: []
2018-04-24 13:59:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100811} ResultSet
2018-04-24 13:59:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100812} Connection
2018-04-24 13:59:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100812} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100813} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100813} Parameters: []
2018-04-24 13:59:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100813} Types: []
2018-04-24 13:59:00,034 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100814} ResultSet
2018-04-24 13:59:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Preprocess time - 74
2018-04-24 13:59:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Service - 获取异常监控信息
2018-04-24 13:59:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 13:59:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424135900035","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424135900"}}
2018-04-24 13:59:00,122 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 13:59:00,123 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Call time - 13
2018-04-24 13:59:00,123 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100815} Connection
2018-04-24 13:59:00,123 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100815} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,123 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100816} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 13:59:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100816} Parameters: []
2018-04-24 13:59:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100816} Types: []
2018-04-24 13:59:00,127 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100817} ResultSet
2018-04-24 13:59:00,128 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:59:27,077 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 13:59:52,024 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:00:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:00:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-11]开始执行异常信息监控扫描任务...
2018-04-24 14:00:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:00:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100818} Connection
2018-04-24 14:00:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100818} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:00:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100819} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:00:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100819} Parameters: [2018-04-24 14:00:00.004, 2018-04-24 14:00:00.004]
2018-04-24 14:00:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100819} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:00:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:00:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 14:00:00,010 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-13]开始执行资金调拨状态更新任务...
2018-04-24 14:00:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100820} ResultSet
2018-04-24 14:00:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100821} Connection
2018-04-24 14:00:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100822} Connection
2018-04-24 14:00:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100821} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100822} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:00:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100823} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100823} Parameters: []
2018-04-24 14:00:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100824} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:00:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100823} Types: []
2018-04-24 14:00:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100824} Parameters: [4, 20180325, 20180424]
2018-04-24 14:00:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100825} ResultSet
2018-04-24 14:00:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100824} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:00:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100826} Connection
2018-04-24 14:00:00,023 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100826} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100827} ResultSet
2018-04-24 14:00:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100828} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100828} Parameters: []
2018-04-24 14:00:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100828} Types: []
2018-04-24 14:00:00,027 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-13]资金调拨状态更新任务执行完毕...
2018-04-24 14:00:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:00:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100829} ResultSet
2018-04-24 14:00:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100830} Connection
2018-04-24 14:00:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100830} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100831} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100831} Parameters: []
2018-04-24 14:00:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100831} Types: []
2018-04-24 14:00:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100832} ResultSet
2018-04-24 14:00:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Preprocess time - 78
2018-04-24 14:00:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Service - 获取异常监控信息
2018-04-24 14:00:00,112 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:00:00,112 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140000033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140000"}}
2018-04-24 14:00:00,123 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:00:00,123 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-11]Call time - 12
2018-04-24 14:00:00,123 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100833} Connection
2018-04-24 14:00:00,124 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100833} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100834} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:00:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100834} Parameters: []
2018-04-24 14:00:00,124 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100834} Types: []
2018-04-24 14:00:00,126 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100835} ResultSet
2018-04-24 14:00:00,127 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:00:25,282 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:00:51,612 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:01:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:01:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:01:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-14]开始执行异常信息监控扫描任务...
2018-04-24 14:01:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100836} Connection
2018-04-24 14:01:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100836} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:01:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100837} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:01:00,005 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100837} Parameters: [2018-04-24 14:01:00.003, 2018-04-24 14:01:00.003]
2018-04-24 14:01:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100837} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:01:00,007 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100838} ResultSet
2018-04-24 14:01:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100839} Connection
2018-04-24 14:01:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100839} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100840} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100840} Parameters: []
2018-04-24 14:01:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100840} Types: []
2018-04-24 14:01:00,011 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100841} ResultSet
2018-04-24 14:01:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100842} Connection
2018-04-24 14:01:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100842} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100843} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100843} Parameters: []
2018-04-24 14:01:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100843} Types: []
2018-04-24 14:01:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100844} ResultSet
2018-04-24 14:01:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100845} Connection
2018-04-24 14:01:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100845} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100846} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100846} Parameters: []
2018-04-24 14:01:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100846} Types: []
2018-04-24 14:01:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100847} ResultSet
2018-04-24 14:01:00,018 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-14]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 14:01:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Preprocess time - 106
2018-04-24 14:01:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Service - 获取异常监控信息
2018-04-24 14:01:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:01:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140100019","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140100"}}
2018-04-24 14:01:00,136 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:01:00,136 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Call time - 11
2018-04-24 14:01:00,137 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100848} Connection
2018-04-24 14:01:00,137 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100848} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,137 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100849} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:01:00,137 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100849} Parameters: []
2018-04-24 14:01:00,137 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100849} Types: []
2018-04-24 14:01:00,139 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100850} ResultSet
2018-04-24 14:01:00,142 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:01:23,701 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:01:48,934 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:02:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.ProcessB2BRefundCmdJob
2018-04-24 14:02:00,004 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:02:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-15]开始执行B2B退款指令任务...
2018-04-24 14:02:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:02:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:02:00,007 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-1]开始执行异常信息监控扫描任务...
2018-04-24 14:02:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100851} Connection
2018-04-24 14:02:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100852} Connection
2018-04-24 14:02:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100852} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:02:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100851} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 14:02:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100853} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:02:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100854} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 14:02:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100853} Parameters: [2018-04-24 14:02:00.008, 2018-04-24 14:02:00.008]
2018-04-24 14:02:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100853} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:02:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100854} Parameters: [1316, 20180423, 20180424]
2018-04-24 14:02:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100854} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:02:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100855} ResultSet
2018-04-24 14:02:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100856} Connection
2018-04-24 14:02:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100857} ResultSet
2018-04-24 14:02:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100856} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100858} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,022 INFO [net.easipay.cbp.view.Job.ProcessB2BRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-15]B2B退款指令任务执行完毕...
2018-04-24 14:02:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100858} Parameters: []
2018-04-24 14:02:00,023 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:02:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100858} Types: []
2018-04-24 14:02:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100859} ResultSet
2018-04-24 14:02:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100860} Connection
2018-04-24 14:02:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100860} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100861} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100861} Parameters: []
2018-04-24 14:02:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100861} Types: []
2018-04-24 14:02:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100862} ResultSet
2018-04-24 14:02:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100863} Connection
2018-04-24 14:02:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100863} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100864} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100864} Parameters: []
2018-04-24 14:02:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100864} Types: []
2018-04-24 14:02:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100865} ResultSet
2018-04-24 14:02:00,131 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Preprocess time - 97
2018-04-24 14:02:00,131 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Service - 获取异常监控信息
2018-04-24 14:02:00,131 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:02:00,131 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140200034","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140200"}}
2018-04-24 14:02:00,141 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:02:00,141 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Call time - 10
2018-04-24 14:02:00,141 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100866} Connection
2018-04-24 14:02:00,142 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100866} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,142 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100867} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:02:00,142 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100867} Parameters: []
2018-04-24 14:02:00,142 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100867} Types: []
2018-04-24 14:02:00,144 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100868} ResultSet
2018-04-24 14:02:00,145 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:02:30,079 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:03:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-4]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:03:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:03:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-4]开始执行异常信息监控扫描任务...
2018-04-24 14:03:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100869} Connection
2018-04-24 14:03:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100869} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:03:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 14:03:00,006 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-2]开始执行资金调拨状态更新任务...
2018-04-24 14:03:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:03:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100870} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:03:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100871} Connection
2018-04-24 14:03:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100870} Parameters: [2018-04-24 14:03:00.004, 2018-04-24 14:03:00.004]
2018-04-24 14:03:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-100871} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:03:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100870} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:03:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100872} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:03:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100872} Parameters: [4, 20180325, 20180424]
2018-04-24 14:03:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-100872} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:03:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100873} ResultSet
2018-04-24 14:03:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-100874} ResultSet
2018-04-24 14:03:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100875} Connection
2018-04-24 14:03:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100875} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,018 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-2]资金调拨状态更新任务执行完毕...
2018-04-24 14:03:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100876} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100876} Parameters: []
2018-04-24 14:03:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100876} Types: []
2018-04-24 14:03:00,020 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:03:00,023 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100877} ResultSet
2018-04-24 14:03:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100878} Connection
2018-04-24 14:03:00,024 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100878} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100879} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100879} Parameters: []
2018-04-24 14:03:00,026 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100879} Types: []
2018-04-24 14:03:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100880} ResultSet
2018-04-24 14:03:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100881} Connection
2018-04-24 14:03:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100881} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100882} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100882} Parameters: []
2018-04-24 14:03:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100882} Types: []
2018-04-24 14:03:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100883} ResultSet
2018-04-24 14:03:00,142 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Preprocess time - 111
2018-04-24 14:03:00,142 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Service - 获取异常监控信息
2018-04-24 14:03:00,142 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:03:00,143 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140300031","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140300"}}
2018-04-24 14:03:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:03:00,154 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-4]Call time - 12
2018-04-24 14:03:00,155 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100884} Connection
2018-04-24 14:03:00,155 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-4]{conn-100884} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,156 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100885} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:03:00,156 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100885} Parameters: []
2018-04-24 14:03:00,156 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-4]{pstm-100885} Types: []
2018-04-24 14:03:00,158 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-4]{rset-100886} ResultSet
2018-04-24 14:03:00,160 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:03:25,443 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:03:54,721 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:04:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-5]Calling execute on job DEFAULT.ProcessB2CRefundCmdJob
2018-04-24 14:04:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:26)[QuartzScheduler_Worker-5]开始执行B2C退款指令任务...
2018-04-24 14:04:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:04:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100887} Connection
2018-04-24 14:04:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:04:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-3]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:04:00,006 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-3]开始执行异常信息监控扫描任务...
2018-04-24 14:04:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-5]{conn-100887} Preparing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 14:04:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100888} Connection
2018-04-24 14:04:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100889} Executing Statement:    SELECT      ID,         CUS_BILL_NO,         PLAT_BILL_NO,         TRX_SERIAL_NO,         OTRX_SERIAL_NO,         ETRX_SERIAL_NO,         TRX_STATE,         CRACC_CUS_CODE,         CRACC_CUS_TYPE,         CRACC_NO,         CRACC_NAME,         CRACC_NODE_CODE,         CRACC_BANK_NAME,         DRACC_CUS_CODE,         DRACC_CUS_TYPE,         DRACC_NO,         DRACC_NAME,         DRACC_NODE_CODE,         DRACC_BANK_NAME,         PAY_CURRENCY,         PAY_AMOUNT,         BUSS_TYPE,         TRX_TYPE,         PAY_WAY,         SAC_FLAG,         INN_CON_FLAG,         INN_CON_STATUS,         PAYCON_TYPE,         CHA_CON_FLAG,         CHA_CON_STATUS,         TRX_BATCH_NO,         UPDATE_TIME,         CREATE_TIME,         MEMO,         TRX_ERR_DEAL_TYPE,         EX_RATE,         SAC_CURRENCY,         SAC_AMOUNT,         CRACC_CUS_NAME,         DRACC_CUS_NAME,         TAX_AMOUNT,         TRANSPORT_EXPENSES,         ACCOUNT_STATUS,         REVERSAL_STATUS,         CHANNEL_COST,         CUS_CHARGE,         TRX_TIME,         TRX_SUCC_TIME,         CRACC_CARD_ID,         DRACC_CARD_ID,         REMITTANCE_BATCH_ID   FROM SAC_OTRX_INFO   WHERE                                                                                                                                                                                                                                                                                                             TRX_TYPE = ?                                                                                                                                                                                                                                                                                                                                                                                                                                  AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                         order by create_time desc  
2018-04-24 14:04:00,009 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100888} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:04:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100889} Parameters: [3303, 20180423, 20180424]
2018-04-24 14:04:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100890} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:04:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-5]{pstm-100889} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:04:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100890} Parameters: [2018-04-24 14:04:00.007, 2018-04-24 14:04:00.007]
2018-04-24 14:04:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100890} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:04:00,016 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-5]{rset-100891} ResultSet
2018-04-24 14:04:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100892} ResultSet
2018-04-24 14:04:00,019 INFO [net.easipay.cbp.view.Job.ProcessB2CRefundCmdJob]execute(line:34)[QuartzScheduler_Worker-5]B2C退款指令任务执行完毕...
2018-04-24 14:04:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100893} Connection
2018-04-24 14:04:00,020 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:04:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100893} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100894} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100894} Parameters: []
2018-04-24 14:04:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100894} Types: []
2018-04-24 14:04:00,026 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100895} ResultSet
2018-04-24 14:04:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100896} Connection
2018-04-24 14:04:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100896} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100897} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100897} Parameters: []
2018-04-24 14:04:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100897} Types: []
2018-04-24 14:04:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100898} ResultSet
2018-04-24 14:04:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100899} Connection
2018-04-24 14:04:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100899} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100900} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100900} Parameters: []
2018-04-24 14:04:00,032 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100900} Types: []
2018-04-24 14:04:00,033 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100901} ResultSet
2018-04-24 14:04:00,033 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-3]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 14:04:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Preprocess time - 50
2018-04-24 14:04:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Service - 获取异常监控信息
2018-04-24 14:04:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:04:00,083 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140400033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140400"}}
2018-04-24 14:04:00,093 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:04:00,093 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-3]Call time - 10
2018-04-24 14:04:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100902} Connection
2018-04-24 14:04:00,094 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-3]{conn-100902} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100903} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:04:00,094 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100903} Parameters: []
2018-04-24 14:04:00,095 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-3]{pstm-100903} Types: []
2018-04-24 14:04:00,097 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-3]{rset-100904} ResultSet
2018-04-24 14:04:00,098 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:04:24,262 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:04:53,672 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:05:00,001 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:05:00,001 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-9]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:05:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-9]开始执行异常信息监控扫描任务...
2018-04-24 14:05:00,002 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100905} Connection
2018-04-24 14:05:00,003 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100905} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:05:00,003 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100906} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:05:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100906} Parameters: [2018-04-24 14:05:00.002, 2018-04-24 14:05:00.002]
2018-04-24 14:05:00,004 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100906} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:05:00,006 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100907} ResultSet
2018-04-24 14:05:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100908} Connection
2018-04-24 14:05:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100908} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100909} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100909} Parameters: []
2018-04-24 14:05:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100909} Types: []
2018-04-24 14:05:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100910} ResultSet
2018-04-24 14:05:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100911} Connection
2018-04-24 14:05:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100911} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100912} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100912} Parameters: []
2018-04-24 14:05:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100912} Types: []
2018-04-24 14:05:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100913} ResultSet
2018-04-24 14:05:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100914} Connection
2018-04-24 14:05:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100914} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100915} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100915} Parameters: []
2018-04-24 14:05:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100915} Types: []
2018-04-24 14:05:00,019 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100916} ResultSet
2018-04-24 14:05:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Preprocess time - 80
2018-04-24 14:05:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Service - 获取异常监控信息
2018-04-24 14:05:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:05:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140500020","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140500"}}
2018-04-24 14:05:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:05:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-9]Call time - 11
2018-04-24 14:05:00,111 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100917} Connection
2018-04-24 14:05:00,111 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-9]{conn-100917} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100918} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:05:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100918} Parameters: []
2018-04-24 14:05:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-9]{pstm-100918} Types: []
2018-04-24 14:05:00,114 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-9]{rset-100919} ResultSet
2018-04-24 14:05:00,115 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:05:24,681 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:05:48,017 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:06:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-7]Calling execute on job DEFAULT.ProcessB2BTransferCmdJob
2018-04-24 14:06:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:06:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:26)[QuartzScheduler_Worker-7]开始执行B2B划款指令状态更新任务...
2018-04-24 14:06:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100920} Connection
2018-04-24 14:06:00,006 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-10]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:06:00,007 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-10]开始执行异常信息监控扫描任务...
2018-04-24 14:06:00,006 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:06:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100921} Connection
2018-04-24 14:06:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-7]{conn-100920} Preparing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 14:06:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100922} Executing Statement:          SELECT          CMD_ID,         CMD_TYPE,         CMD_SERIAL_NO,         REQ_TIME,         CMD_STATE,         CREATE_TIME,         RTRX_SERIAL_NO,         RTN_CODE,         ERTN_CODE,         ERTN_INFO,         RDO_TIME,         MSG_RECEIVER,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_CODE,         DRACC_BANK_BRANCH,         PAY_CURRENCY,         PAY_COUNT,         PAY_AMOUNT,         PAY_PRI,         VLD_DATE,         CRT_CODE,         CRACC_NO,         CRACC_NAME,         CRACC_BANK_CODE,         CRACC_BANK_BRANCH,         REQ_SPT1,         REQ_SPT2,         REQ_SPT3,         REQ_MEMO,         BATCH_SERIAL_NO,         OTRX_SERIAL_NO,         ORG_ID    FROM SAC_B2B_COMMAND         WHERE                        CMD_STATE = ?       AND           CREATE_TIME >= to_date(?,'yyyyMMdd')                AND          CREATE_TIME < to_date(?,'yyyyMMdd')+1                         ORDER BY CREATE_TIME DESC   
2018-04-24 14:06:00,010 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100922} Parameters: [QS, 20180325, 20180424]
2018-04-24 14:06:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100921} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:06:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-7]{pstm-100922} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:06:00,010 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-6]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 14:06:00,014 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-6]开始执行资金调拨状态更新任务...
2018-04-24 14:06:00,010 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:06:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-7]{rset-100924} ResultSet
2018-04-24 14:06:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100923} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:06:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100925} Connection
2018-04-24 14:06:00,017 INFO [net.easipay.cbp.view.Job.ProcessB2BTransferCmdJob]execute(line:33)[QuartzScheduler_Worker-7]B2B划款指令状态更新任务执行完毕...
2018-04-24 14:06:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-6]{conn-100925} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:06:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100923} Parameters: [2018-04-24 14:06:00.007, 2018-04-24 14:06:00.007]
2018-04-24 14:06:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100926} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:06:00,019 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:06:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100926} Parameters: [4, 20180325, 20180424]
2018-04-24 14:06:00,020 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100923} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:06:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-6]{pstm-100926} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:06:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100927} ResultSet
2018-04-24 14:06:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100928} Connection
2018-04-24 14:06:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-6]{rset-100929} ResultSet
2018-04-24 14:06:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100928} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,028 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-6]资金调拨状态更新任务执行完毕...
2018-04-24 14:06:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100930} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100930} Parameters: []
2018-04-24 14:06:00,029 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:06:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100930} Types: []
2018-04-24 14:06:00,031 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100931} ResultSet
2018-04-24 14:06:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100932} Connection
2018-04-24 14:06:00,032 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100932} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100933} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100933} Parameters: []
2018-04-24 14:06:00,033 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100933} Types: []
2018-04-24 14:06:00,037 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100934} ResultSet
2018-04-24 14:06:00,038 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100935} Connection
2018-04-24 14:06:00,038 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100935} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,038 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100936} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100936} Parameters: []
2018-04-24 14:06:00,039 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100936} Types: []
2018-04-24 14:06:00,041 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100937} ResultSet
2018-04-24 14:06:00,191 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Preprocess time - 150
2018-04-24 14:06:00,191 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Service - 获取异常监控信息
2018-04-24 14:06:00,191 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:06:00,192 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140600042","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140600"}}
2018-04-24 14:06:00,202 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:06:00,202 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-10]Call time - 11
2018-04-24 14:06:00,202 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100938} Connection
2018-04-24 14:06:00,203 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-10]{conn-100938} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,203 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100939} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:06:00,203 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100939} Parameters: []
2018-04-24 14:06:00,203 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-10]{pstm-100939} Types: []
2018-04-24 14:06:00,205 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-10]{rset-100940} ResultSet
2018-04-24 14:06:00,207 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:06:27,312 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:06:56,324 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:07:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:07:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-12]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:07:00,003 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-12]开始执行异常信息监控扫描任务...
2018-04-24 14:07:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100941} Connection
2018-04-24 14:07:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100941} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:07:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100942} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:07:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100942} Parameters: [2018-04-24 14:07:00.004, 2018-04-24 14:07:00.004]
2018-04-24 14:07:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100942} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:07:00,013 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100943} ResultSet
2018-04-24 14:07:00,014 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100944} Connection
2018-04-24 14:07:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100944} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100945} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100945} Parameters: []
2018-04-24 14:07:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100945} Types: []
2018-04-24 14:07:00,018 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100946} ResultSet
2018-04-24 14:07:00,019 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100947} Connection
2018-04-24 14:07:00,020 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100947} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100948} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100948} Parameters: []
2018-04-24 14:07:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100948} Types: []
2018-04-24 14:07:00,024 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100949} ResultSet
2018-04-24 14:07:00,025 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100950} Connection
2018-04-24 14:07:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100950} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100951} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,027 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100951} Parameters: []
2018-04-24 14:07:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100951} Types: []
2018-04-24 14:07:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100952} ResultSet
2018-04-24 14:07:00,139 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Preprocess time - 109
2018-04-24 14:07:00,140 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Service - 获取异常监控信息
2018-04-24 14:07:00,140 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:07:00,140 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140700031","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140700"}}
2018-04-24 14:07:00,150 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:07:00,150 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-12]Call time - 11
2018-04-24 14:07:00,150 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100953} Connection
2018-04-24 14:07:00,151 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-12]{conn-100953} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100954} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:07:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100954} Parameters: []
2018-04-24 14:07:00,151 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-12]{pstm-100954} Types: []
2018-04-24 14:07:00,153 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-12]{rset-100955} ResultSet
2018-04-24 14:07:00,154 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:07:29,193 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:07:52,559 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:08:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-8]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:08:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:08:00,005 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-8]开始执行异常信息监控扫描任务...
2018-04-24 14:08:00,006 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100956} Connection
2018-04-24 14:08:00,007 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100956} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:08:00,008 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-13]Calling execute on job DEFAULT.ProcessDepositDetailCmdJob
2018-04-24 14:08:00,009 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:26)[QuartzScheduler_Worker-13]开始执行线下预存明细指令状态更新任务...
2018-04-24 14:08:00,008 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:08:00,008 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100957} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:08:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100958} Connection
2018-04-24 14:08:00,011 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100957} Parameters: [2018-04-24 14:08:00.006, 2018-04-24 14:08:00.006]
2018-04-24 14:08:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100957} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:08:00,013 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-13]{conn-100958} Preparing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 14:08:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100959} Executing Statement:          SELECT          OFL_DEPOSIT_ID,         OFL_DEPOSIT_BATCH_ID,         BATCH_SERIAL_NO,         TRX_SERIAL_NO,         APPLY_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         DBT_CODE,         DRACC_NO,         DRACC_NAME,         DRACC_BANK_NAME,         BANK_SERIAL_NO,         BANK_TRX_DATE,         DEAL_STATE,         CHARGE_APPLY_ID,         CHECK_STATE,         DEAL_MEMO,         OPER_TIME,         AUDITOR_ID,         AUDITOR_NAME,         AUDIT_TIME,         CREATE_TIME,         LAST_UPDATE_TIME,         OPERATOR_ID,         OPERATOR_NAME,         MEMO    FROM SAC_DEPOSIT_DETAIL         WHERE                                                                                                                                                                                  CHECK_STATE = ?                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                          
2018-04-24 14:08:00,015 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100959} Parameters: [00, 20180423, 20180424]
2018-04-24 14:08:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100960} ResultSet
2018-04-24 14:08:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-13]{pstm-100959} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:08:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100961} Connection
2018-04-24 14:08:00,018 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100961} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-13]{rset-100962} ResultSet
2018-04-24 14:08:00,021 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100963} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100963} Parameters: []
2018-04-24 14:08:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100963} Types: []
2018-04-24 14:08:00,023 INFO [net.easipay.cbp.view.Job.ProcessDepositDetailCmdJob]execute(line:33)[QuartzScheduler_Worker-13]线下预存明细指令状态更新任务执行完毕...
2018-04-24 14:08:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100964} ResultSet
2018-04-24 14:08:00,025 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:08:00,026 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100965} Connection
2018-04-24 14:08:00,027 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100965} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100966} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100966} Parameters: []
2018-04-24 14:08:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100966} Types: []
2018-04-24 14:08:00,029 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100967} ResultSet
2018-04-24 14:08:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100968} Connection
2018-04-24 14:08:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100968} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,030 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100969} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100969} Parameters: []
2018-04-24 14:08:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100969} Types: []
2018-04-24 14:08:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100970} ResultSet
2018-04-24 14:08:00,033 INFO [net.easipay.dsfc.cache.CacheLogger]info(line:14)[QuartzScheduler_Worker-8]Start refresh cache... [ cacheType - net.easipay.dsfc.local.service ]
2018-04-24 14:08:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Preprocess time - 80
2018-04-24 14:08:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Service - 获取异常监控信息
2018-04-24 14:08:00,113 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:08:00,114 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140800033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140800"}}
2018-04-24 14:08:00,125 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:08:00,126 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-8]Call time - 12
2018-04-24 14:08:00,126 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100971} Connection
2018-04-24 14:08:00,126 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-8]{conn-100971} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,126 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100972} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:08:00,127 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100972} Parameters: []
2018-04-24 14:08:00,127 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-8]{pstm-100972} Types: []
2018-04-24 14:08:00,129 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-8]{rset-100973} ResultSet
2018-04-24 14:08:00,130 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:08:27,946 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:08:52,457 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:09:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-11]Calling execute on job DEFAULT.ProcessB2BOflCmdJob
2018-04-24 14:09:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:26)[QuartzScheduler_Worker-11]开始执行B2B线下出款指令状态更新任务...
2018-04-24 14:09:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:09:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100974} Connection
2018-04-24 14:09:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-11]{conn-100974} Preparing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:09:00,005 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:09:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100975} Executing Statement:          SELECT          id,         trx_serial_no,         otrx_serial_no,         etrx_serial_no,         state,         dracc_node_code,         crt_Code,         cracc_no,         cracc_name,         cracc_node_code,         cracc_bank_name,         pay_amount,         pay_currency,         oper_name,         oper_time,         create_time,         last_update_time    FROM SAC_OFL_COMMAND         WHERE                                                                   state = ?                                                                                                                                                                                                          AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:09:00,005 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-14]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:09:00,007 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-14]开始执行异常信息监控扫描任务...
2018-04-24 14:09:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100975} Parameters: [01, 20180422, 20180424]
2018-04-24 14:09:00,009 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-15]Calling execute on job DEFAULT.ProcessFundTransferStateJob
2018-04-24 14:09:00,009 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:26)[QuartzScheduler_Worker-15]开始执行资金调拨状态更新任务...
2018-04-24 14:09:00,009 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:09:00,008 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100976} Connection
2018-04-24 14:09:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100977} Connection
2018-04-24 14:09:00,009 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-11]{pstm-100975} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:09:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-15]{conn-100977} Preparing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:09:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100976} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:09:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100978} Executing Statement:          SELECT          ID,         TRX_SERIAL_NO,         CRACC_NO,         CRACC_NODE_CODE,         DRACC_NO,         DRACC_NODE_CODE,         PAY_CURRENCY,         PAY_AMOUNT,         PAY_WAY,         MEMO,         CREATE_TIME,         UPDATE_TIME,         CMD_STATE,         CMD_MEMO    FROM SAC_FUND_TRANSFER_CMD         WHERE                                                                                                                                                                           CMD_STATE = ?                       AND           create_time >= to_date(?,'yyyyMMdd')                    AND          create_time < to_date(?,'yyyyMMdd')+1                               ORDER BY CREATE_TIME DESC   
2018-04-24 14:09:00,013 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-11]{rset-100980} ResultSet
2018-04-24 14:09:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100979} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:09:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100978} Parameters: [4, 20180325, 20180424]
2018-04-24 14:09:00,016 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:33)[QuartzScheduler_Worker-11]B2B线下出款指令状态更新任务执行完毕...
2018-04-24 14:09:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100979} Parameters: [2018-04-24 14:09:00.008, 2018-04-24 14:09:00.008]
2018-04-24 14:09:00,017 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:09:00,016 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-15]{pstm-100978} Types: [java.lang.String, java.lang.String, java.lang.String]
2018-04-24 14:09:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100979} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:09:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-15]{rset-100981} ResultSet
2018-04-24 14:09:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100982} ResultSet
2018-04-24 14:09:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100983} Connection
2018-04-24 14:09:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100983} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,023 INFO [net.easipay.cbp.view.Job.ProcessFundTransferStateJob]execute(line:34)[QuartzScheduler_Worker-15]资金调拨状态更新任务执行完毕...
2018-04-24 14:09:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100984} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,024 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:09:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100984} Parameters: []
2018-04-24 14:09:00,025 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100984} Types: []
2018-04-24 14:09:00,027 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100985} ResultSet
2018-04-24 14:09:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100986} Connection
2018-04-24 14:09:00,028 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100986} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,028 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100987} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100987} Parameters: []
2018-04-24 14:09:00,029 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100987} Types: []
2018-04-24 14:09:00,030 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100988} ResultSet
2018-04-24 14:09:00,030 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100989} Connection
2018-04-24 14:09:00,031 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100989} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100990} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100990} Parameters: []
2018-04-24 14:09:00,031 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100990} Types: []
2018-04-24 14:09:00,032 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100991} ResultSet
2018-04-24 14:09:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Preprocess time - 76
2018-04-24 14:09:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Service - 获取异常监控信息
2018-04-24 14:09:00,109 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:09:00,110 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424140900033","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424140900"}}
2018-04-24 14:09:00,120 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:09:00,120 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-14]Call time - 11
2018-04-24 14:09:00,121 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100992} Connection
2018-04-24 14:09:00,121 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-14]{conn-100992} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,121 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100993} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:09:00,121 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100993} Parameters: []
2018-04-24 14:09:00,121 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-14]{pstm-100993} Types: []
2018-04-24 14:09:00,123 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-14]{rset-100994} ResultSet
2018-04-24 14:09:00,125 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:09:29,638 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:09:58,962 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:10:00,002 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:10:00,002 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-1]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:10:00,002 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-1]开始执行异常信息监控扫描任务...
2018-04-24 14:10:00,004 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100995} Connection
2018-04-24 14:10:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100995} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:10:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100996} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:10:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100996} Parameters: [2018-04-24 14:10:00.004, 2018-04-24 14:10:00.004]
2018-04-24 14:10:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100996} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:10:00,009 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-100997} ResultSet
2018-04-24 14:10:00,010 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100998} Connection
2018-04-24 14:10:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-100998} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100999} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100999} Parameters: []
2018-04-24 14:10:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-100999} Types: []
2018-04-24 14:10:00,014 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-101000} ResultSet
2018-04-24 14:10:00,015 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101001} Connection
2018-04-24 14:10:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101001} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101002} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,017 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101002} Parameters: []
2018-04-24 14:10:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101002} Types: []
2018-04-24 14:10:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-101003} ResultSet
2018-04-24 14:10:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101004} Connection
2018-04-24 14:10:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101004} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101005} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101005} Parameters: []
2018-04-24 14:10:00,024 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101005} Types: []
2018-04-24 14:10:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-101006} ResultSet
2018-04-24 14:10:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Preprocess time - 74
2018-04-24 14:10:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Service - 获取异常监控信息
2018-04-24 14:10:00,100 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:10:00,101 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424141000026","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424141000"}}
2018-04-24 14:10:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:10:00,111 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-1]Call time - 11
2018-04-24 14:10:00,111 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101007} Connection
2018-04-24 14:10:00,112 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-1]{conn-101007} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101008} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:10:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101008} Parameters: []
2018-04-24 14:10:00,112 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-1]{pstm-101008} Types: []
2018-04-24 14:10:00,114 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-1]{rset-101009} ResultSet
2018-04-24 14:10:00,115 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:10:24,303 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:10:50,939 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 1 triggers
2018-04-24 14:11:00,003 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:11:00,003 DEBUG [org.quartz.core.JobRunShell]run(line:201)[QuartzScheduler_Worker-2]Calling execute on job DEFAULT.precessExceptMonitorJob
2018-04-24 14:11:00,004 INFO [net.easipay.cbp.view.Job.ProcessB2BOflCmdJob]execute(line:25)[QuartzScheduler_Worker-2]开始执行异常信息监控扫描任务...
2018-04-24 14:11:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101010} Connection
2018-04-24 14:11:00,005 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101010} Preparing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:11:00,006 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101011} Executing Statement:    select   ID,   SERVER_IP,   CLIENT_IP,   REQ_CHANNER,   SER_CHANNER,   SERVICE_ID,   REQ_URL,   OPERATE_TYPE,   CREATE_TIME,   BUSI_TYPE,   TXN_CODE,   TRX_SERIAL_ID,   REC_BATCH_ID,   REQ_DATA,   ERROR_NO,   ERROR_MSG,   ERROR_REASON,   STATUS,   TABLE_ID   from SAC_EXCEPT_MONITOR   where    (? + interval '60' minute) > CREATE_TIME and create_time >= (? - interval '60' minute)    order by create_time desc  
2018-04-24 14:11:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101011} Parameters: [2018-04-24 14:11:00.004, 2018-04-24 14:11:00.004]
2018-04-24 14:11:00,007 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101011} Types: [java.sql.Timestamp, java.sql.Timestamp]
2018-04-24 14:11:00,010 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-101012} ResultSet
2018-04-24 14:11:00,011 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101013} Connection
2018-04-24 14:11:00,012 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101013} Preparing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,012 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101014} Executing Statement:      select ID,        TRANSACTIONID,        CHANNEL,        ORIGIN,        SERVERIP,        CLIENTIP,        TIMEMILLIS,        INTERFACEID,        URL,        TRXCODE,        CODE,        MESSAGE,        DATA,        CREATE_TIME,        DEMO,        '01' as operate_type        from sac_record_log        where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,013 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101014} Parameters: []
2018-04-24 14:11:00,014 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101014} Types: []
2018-04-24 14:11:00,015 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-101015} ResultSet
2018-04-24 14:11:00,016 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101016} Connection
2018-04-24 14:11:00,017 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101016} Preparing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101017} Executing Statement:    select    ID,   REC_DETAIL_ID,   TRX_SERIAL_NO,   REC_DIFF_TYPE,   REC_DIFF_DESC,   BANK_NODE_CODE,   STATUS,   DEAL_TYPE,   DEAL_OPER,   CREATE_TIME,   MEMO,   REC_BATCH_ID,   TRX_TIME,   PAY_AMOUNT,   BANK_SERIAL_NO,   PAYCON_TYPE,   UPDATE_TIME,   ORI_TRX_STATE,   ORI_INN_CON_AMOUNT,   ORI_CHA_CON_AMOUNT,   CHN_CODE,   REC_OPER,   CURRENCY_TYPE,   REC_START_DATE,   REC_END_DATE,   BUSI_TYPE,   TRX_CODE,   PRIV_DOMAIN,   SUPPLEMENT_FLAG,   '03' as operate_type   from SAC_REC_DIFFERENCES   where (sysdate + interval '30' minute) > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,018 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101017} Parameters: []
2018-04-24 14:11:00,019 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101017} Types: []
2018-04-24 14:11:00,020 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-101018} ResultSet
2018-04-24 14:11:00,021 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101019} Connection
2018-04-24 14:11:00,022 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101019} Preparing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,022 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101020} Executing Statement:    select   ID,   EXECUTIONID,   LOGLEVEL,   LOGDATE,   JOBCLASS,   JOBGROUP,   JOBNAME,   TRIGGERGROUP,   TRIGGERNAME,   MESSAGE,   STACKTRACE,   ROOTCAUSE,   '02' as operate_type   from SAC_REC_JOB_LOG   where (sysdate + interval '30' minute)  > LOGDATE and LOGDATE >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101020} Parameters: []
2018-04-24 14:11:00,023 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101020} Types: []
2018-04-24 14:11:00,025 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-101021} ResultSet
2018-04-24 14:11:00,120 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Preprocess time - 94
2018-04-24 14:11:00,120 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Service - 获取异常监控信息
2018-04-24 14:11:00,121 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]HttpUrl - http://10.68.7.50:8083/dsf/interface/getMonitorInfo
2018-04-24 14:11:00,121 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Request - {"Request":{},"Signature":{"Sign":"","data":""},"PubInfo":{"RequestVersion":"2.0.1","TransactionId":"null20180424141100026","Channel":null,"ClientIP":"10.68.30.91","Origin":"dsfs","TransactionTime":"20180424141100"}}
2018-04-24 14:11:00,131 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Response - {"Message":"成功","Response":{"monitorInfoList":[]},"Code":"000000"}
2018-04-24 14:11:00,132 DEBUG [net.easipay.dsfc.ws.WsLogger]debug(line:37)[QuartzScheduler_Worker-2]Call time - 11
2018-04-24 14:11:00,132 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101022} Connection
2018-04-24 14:11:00,132 DEBUG [java.sql.Connection]debug(line:27)[QuartzScheduler_Worker-2]{conn-101022} Preparing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,132 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101023} Executing Statement:    select   TASK_ID,   TRX_CODE,   BUSI_TYPE,   STEP,   PARAMS,   DIGEST,   SERNO,   TRADE_TIME,   STATUS,   ERR_DESC,   CREATE_TIME,   '04' as operate_type   from FIN_TASK   where status in('-1','-2')   and (sysdate + interval '30' minute)  > CREATE_TIME and create_time >= (sysdate - interval '30' minute)   
2018-04-24 14:11:00,132 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101023} Parameters: []
2018-04-24 14:11:00,133 DEBUG [java.sql.PreparedStatement]debug(line:27)[QuartzScheduler_Worker-2]{pstm-101023} Types: []
2018-04-24 14:11:00,135 DEBUG [java.sql.ResultSet]debug(line:27)[QuartzScheduler_Worker-2]{rset-101024} ResultSet
2018-04-24 14:11:00,136 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
2018-04-24 14:11:29,655 DEBUG [org.quartz.core.QuartzSchedulerThread]run(line:276)[QuartzScheduler_QuartzSchedulerThread]batch acquisition of 0 triggers
